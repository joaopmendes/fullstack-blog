{"version":3,"sources":["Store/Auth/auth.initialState.js","Store/Auth/auth.types.js","Store/Post/post.initialState.js","Store/Post/post.types.js","Store/Controls/controls.types.js","Store/Controls/controls.initialState.js","create-store.config.jsx","Store/Auth/auth.reducer.js","Store/Post/post.reducer.js","Store/Controls/controls.reducer.js","api/auth.js","Store/Auth/auth.actions.js","api/blog.js","Store/Controls/controls.actions.js","Store/Post/post.actions.js","helpers/helpers.js","Components/navbar/navbar.component.jsx","Components/Loader/loader.component.jsx","Components/BlogLayout/blog-layout.component.js","Components/CardWrapper/card-wrapper.component.jsx","Components/CardWrapperHeader/card-wrapper-header.component.jsx","Components/BlogPageBody/blog-page-body.component.jsx","Pages/home/home.page.jsx","Components/MacroControllers/form-wrapper.component.jsx","Pages/register/register.config.js","global.styles.js","Components/MacroControllers/button.component.jsx","Components/MacroControllers/macro.styles.js","Components/MacroControllers/input-text.component.jsx","Components/MacroControllers/file-input.component.jsx","Components/RegisterForm/register-field.component.jsx","Components/RegisterForm/register-form.component.jsx","Pages/register/register.page.jsx","Components/LoginForm/login-fields.component.jsx","Components/LoginForm/login-form.component.jsx","Pages/login/login.page.jsx","Pages/PostPages/post.config.js","Components/MacroControllers/ckeditor.jsx","Components/CreatePostForm/create-post-fields.component.jsx","Components/CreatePostForm/create-post-form.component.jsx","Pages/PostPages/create-post/create-post.page.jsx","Components/ManagePostsLists/manage-post-list.component.jsx","Pages/PostPages/manage-posts/manage-posts.page.jsx","Pages/PostPages/edit-post/edit-post.page.jsx","Pages/PostPages/PostView/postview.page.jsx","routes/normal.routes.js","Admin/sideNavigation.jsx","Admin/Footer.jsx","Admin/AdminLayout.jsx","Admin/pages/DashboardPage.jsx","routes/admin.routes.js","create-router.config.jsx","create-theme.style.jsx","index.jsx"],"names":["initialState","userLoggedIn","user","accessToken","name","email","posts","profilePicture","_id","AuthActionTypes","Object","freeze","LOGIN_USER","LOGOUT","UPDATE_USER_DATA","isLoading","hasError","PostActionTypes","FETCH_POSTS","LOADING","ControlsActionTypes","ADD_LOADER","REMOVE_LOADER","loaders","rootReducers","combineReducers","auth","state","action","type","payload","post","controls","loaderIndex","findIndex","loader","id","alreadyCreated","newState","JSON","parse","stringify","active","push","console","log","map","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReduxStore","children","loading","getUserData","token","headers","Authorization","axios","get","then","res","data","catch","Error","registerUser","FormData","append","password","avatar","errorMessage","err","response","updateUserData","dispatch","getState","a","logout","isAdmin","admin","login","createPost","subject","body","tags","thumbnail","deletePost","postId","delete","editPost","newPost","put","addLoader","removeLoader","fetchPosts","bool","getDaysSince","date","differenceMs","Math","abs","Date","round","Navbar","useSelector","useDispatch","useState","isOpen","setIsOpen","logoutUser","useCallback","color","light","style","margin","to","onClick","navbar","left","listStyle","nav","caret","className","Loader","some","Modal","Flex","height","width","styled","div","BlogLayoutComponent","CardWrapperComponent","CardWrapperHeaderComponent","title","message","defaultProps","BlogPageBodyComponent","history","useHistory","lg","hover","waves","src","postImage","replace","alt","href","overlay","tag","index","length","author","created_at","size","HomePage","useEffect","getPostsInterval","setInterval","clearInterval","FormWrapper","Wrapper","validationSchema","Yup","shape","required","min","confirmPassword","oneOf","initialValues","WrapperSubmitButton","Button","render","disabled","backgroundColor","rest","StyledAnchor","StyledButton","button","props","theme","fadeIn","keyframes","InputWrapper","touched","error","danger","success","dark","InputInfo","Icon","ErrorMessage","p","InputGroup","InputLabel","label","InputField","input","opacity","InputText","resetField","PrefixIcon","minLength","maxLength","onChange","value","onBlur","regex","displayErrorWhenImTrue","placeholder","uuid","htmlFor","undefined","FileInput","MdFileUpload","setError","setTouched","imagePreviewError","setImagePreviewError","imagePreview","setImagePreview","setId","onChangeFile","e","preventDefault","reader","FileReader","file","target","files","onloadend","imgPreview","result","readAsDataURL","ImagePreviewWrapper","ImagePreviewImg","WrapperInputField","text","img","RegisterFields","errors","values","handleChange","handleBlur","setFieldValue","MdContacts","Boolean","MdEmail","FaCog","RegisterForm","isSubmitting","isValid","handleSubmit","serverError","dismiss","onClose","onSubmit","RegisterPage","setServerError","addToast","useToasts","setSubmitting","appearance","formik","useFormik","LoginFieldsComponent","LoginFormComponent","LoginPage","code","max","CkEditorComponent","editor","ClassicEditor","event","getData","CreatePostFieldsComponent","setKey","previousBody","setPreviousBody","IoMdCog","CreatePostFormComponent","editMode","CreatePostPage","toastManager","ManagePostList","columns","field","sort","rows","postTitle","toDateString","options","striped","bordered","ManagePostPage","EditPostPage","match","params","initialValuesImported","setInitialValues","find","reduce","acc","curr","concat","join","enableReinitialize","PostViewPage","dangerouslySetInnerHTML","__html","OnlyNotLoginRoute","Component","OnlyLoginRoute","NormalRoutes","path","exact","component","SideNavigation","activeClassName","icon","Footer","AdminLayout","DashboardPage","AdminRoute","AdminRoutes","Routes","RouterConfig","purple","blue","orange","StyledTheme","App","autoDismiss","autoDismissTimeout","ReactDOM","document","getElementById"],"mappings":"4RAAaA,EAAe,CAC1BC,cAAc,EACdC,KAAM,CACJC,YAAa,GACbC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,eAAgB,GAChBC,IAAK,KCRIC,EAAkBC,OAAOC,OAAO,CAC3CC,WAAY,sBACZC,OAAQ,qBACRC,iBAAkB,4BCHPd,EAAe,CAC1Be,WAAW,EACXC,UAAU,EACVV,MAAO,ICHIW,EAAkBP,OAAOC,OAAO,CAC3CO,YAAa,wBACbC,QAAS,mBCFEC,EAAsBV,OAAOC,OAAO,CAC/CU,WAAY,wBACZC,cAAe,6BCFJtB,EAAe,CAC1BuB,QAAS,ICYLC,EAAeC,0BAAgB,CACnCC,KCXyB,WAAmC,IAAlCC,EAAiC,uDAAzB3B,EAAc4B,EAAW,uCAC3D,OAAQA,EAAOC,MACb,KAAKpB,EAAgBG,WACnB,MAAO,CAAEV,KAAK,eAAM0B,EAAOE,SAAW7B,cAAc,GACtD,KAAKQ,EAAgBI,OACnB,OAAOb,EACT,QACE,OAAO2B,IDKXI,KEZyB,WAAmC,IAAlCJ,EAAiC,uDAAzB3B,EAAc4B,EAAW,uCAC3D,OAAQA,EAAOC,MACb,KAAKZ,EAAgBC,YACnB,OAAO,2BACFS,GADL,IAEErB,MAAOsB,EAAOE,UAElB,KAAKb,EAAgBE,QACnB,OAAO,2BACFQ,GADL,IAEEZ,UAAWa,EAAOE,UAEtB,QACE,OAAOH,IFAXK,SGd6B,WAAmC,IAAlCL,EAAiC,uDAAzB3B,EAAc4B,EAAW,uCAC/D,OAAQA,EAAOC,MACb,KAAKT,EAAoBC,WACvB,IAAMY,EAAcN,EAAMJ,QAAQW,WAChC,SAACC,GAAD,OAAYA,EAAOC,KAAOR,EAAOE,WAE7BO,GAAkC,IAAjBJ,EACjBK,EAAWC,KAAKC,MAAMD,KAAKE,UAAUd,IAU3C,OATIU,EACFC,EAASf,QAAQU,GAAaS,QAAS,EAEvCJ,EAASf,QAAQoB,KAAK,CACpBP,GAAIR,EAAOE,QACXY,QAAQ,IAGZE,QAAQC,IAAI,8BAA+BP,GACpCA,EACT,KAAKlB,EAAoBE,cACvB,OAAO,2BACFK,GADL,IAEEJ,QAASI,EAAMJ,QAAQuB,KAAI,SAACX,GAK1B,OAJIA,EAAOC,KAAOR,EAAOE,UACvBK,EAAOO,QAAS,GAGXP,OAGb,QACE,OAAOR,MHbPoB,EAAgB,CACpBC,IAAK,OACLC,aAGIC,EAAmBC,YAAeJ,EAAevB,GAEjD4B,EAAQC,sBACZH,EACAI,8BAAoBC,0BAAgBC,OAGhCC,EAAYC,YAAaN,GAClBO,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACxB,kBAAC,IAAD,CAAUR,MAAOA,GACf,kBAAC,IAAD,CAAaS,QAAS,KAAMJ,UAAWA,GACpCG,K,kEIjCME,EAAc,SAACC,GAC1B,IAAMC,EAAU,CACdA,QAAS,CACPC,cAAe,UAAYF,IAG/B,OAAOG,IACJC,IAAI,YAAaH,GACjBI,MAAK,SAACC,GAEL,OADAzB,QAAQC,IAAI,4BACLwB,EAAIC,KAAKA,QAEjBC,OAAM,WACL,MAAM,IAAIC,MAAM,0CAITC,EAAe,SAACvE,GAC3B,IAAMoE,EAAO,IAAII,SACjBJ,EAAKK,OAAO,OAAQzE,EAAKE,MACzBkE,EAAKK,OAAO,QAASzE,EAAKG,OAC1BiE,EAAKK,OAAO,WAAYzE,EAAK0E,UAC7BN,EAAKK,OAAO,gBAAiBzE,EAAK2E,QAOlC,OAAOX,IACJnC,KAAK,gBAAiBuC,EANT,CACdN,QAAS,CACP,eAAgB,yBAKjBI,MAAK,SAACC,GACL,MAAO,CACLC,KAAMD,EAAIC,KACVtD,UAAU,EACV8D,aAAc,OAGjBP,OAAM,SAACQ,GACN,MAAO,CACLT,KAAMS,EAAIC,SAASV,KACnBtD,UAAU,EACV8D,aAAcC,EAAIC,SAASV,KAAKQ,cAAgB,6BC1C3CG,EAAiB,yDAAM,WAAOC,EAAUC,GAAjB,qBAAAC,EAAA,2DACjBD,MAATzD,EAD0B,EAC1BA,MACCzB,aAFyB,wBAG5BqE,EAAO,KAHqB,kBAKjBR,EAAYpC,EAAKxB,KAAKC,aALL,OAK9BmE,EAL8B,8DAO9BY,EAASG,KAPqB,+BAU5Bf,EAV4B,iBAWxBxC,EAAU,CACd1B,KAAMkE,EAAKlE,KACXC,MAAOiE,EAAKjE,MACZiF,QAAShB,EAAKiB,MACdpF,YAAamE,EAAKnE,YAClBG,MAAOgE,EAAKhE,MACZC,eAAgB+D,EAAK/D,eAErB6B,GAAIkC,EAAK9D,KAEX0E,EAASM,EAAM1D,IArBe,+BAuB9BoD,EAASG,KAvBqB,4EAAN,yDA4BjBG,EAAQ,SAAC1D,GAAD,MAAc,CACjCD,KAAMpB,EAAgBG,WACtBkB,YAEWuD,EAAS,iBAAO,CAC3BxD,KAAMpB,EAAgBI,SCpBX4E,EAAa,SAAC,GAA+C,IAA7C1B,EAA4C,EAA5CA,MAAO2B,EAAqC,EAArCA,QAASC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,UACjDvB,EAAO,IAAII,SACjBJ,EAAKK,OAAO,UAAWe,GACvBpB,EAAKK,OAAO,OAAQgB,GACpBrB,EAAKK,OAAO,OAAQiB,GAAQ,IAC5BtB,EAAKK,OAAO,aAAckB,GAE1B,IAAM7B,EAAU,CACdA,QAAS,CACP,eAAgB,sBAChBC,cAAe,UAAYF,IAG/B,OAAOG,IACJnC,KAAK,aAAcuC,EAAMN,GACzBI,MAAK,SAACC,GAGL,OAFAzB,QAAQC,IAAI,yCAEL,CAAE7B,UAAU,EAAOsD,KAAMD,EAAIC,KAAKA,KAAMQ,aAAc,OAE9DP,OAAM,SAACQ,GACN,MAAO,CACL/D,UAAU,EACVsD,KAAMS,EAAIC,SAASV,KACnBQ,aAAc,8BAKTgB,EAAa,SAAC,GAAuB,IAArB/B,EAAoB,EAApBA,MAAOgC,EAAa,EAAbA,OAC5B/B,EAAU,CACdA,QAAS,CACPC,cAAe,UAAYF,IAG/B,OAAOG,IACJ8B,OAAO,cAAgBD,EAAQ/B,GAC/BI,MAAK,SAACC,GAGL,OAFAzB,QAAQC,IAAI,wCAEL,CACL7B,UAAU,EACV8D,aAAc,GACdR,KAAMD,EAAIC,SAGbC,OAAM,SAACF,GAAS,IAAD,IACd,MAAO,CACLrD,UAAU,EACV8D,cACK,OAAHT,QAAG,IAAHA,GAAA,UAAAA,EAAKW,gBAAL,mBAAeV,YAAf,eAAqBQ,eAAgB,4BACvCR,KAAMD,EAAIW,SAASV,UAKd2B,EAAW,SAAClC,EAAO3B,EAAI8D,GAClC,IAAM5B,EAAO,IAAII,SACjBJ,EAAKK,OAAO,UAAWuB,EAAQR,SAC/BpB,EAAKK,OAAO,OAAQuB,EAAQP,MAC5BrB,EAAKK,OAAO,OAAQuB,EAAQN,MAAQ,IACpCtB,EAAKK,OAAO,aAAcuB,EAAQL,WAElC,IAAM7B,EAAU,CACdA,QAAS,CACP,eAAgB,sBAChBC,cAAe,UAAYF,IAG/B,OAAOG,IACJiC,IADI,qBACc/D,GAAMkC,EAAMN,GAC9BI,MAAK,SAACC,GAGL,OAFAzB,QAAQC,IAAI,yCAEL,CAAE7B,UAAU,EAAOsD,KAAMD,EAAIC,KAAKA,KAAMQ,aAAc,OAE9DP,OAAM,SAACQ,GAAS,IAAD,EACd,MAAO,CACL/D,UAAU,EACVsD,KAAMS,EAAIC,SAASV,KACnBQ,cACE,UAAAC,EAAIC,SAASF,oBAAb,eAA4B,KAC5BC,EAAIC,SAASF,cACb,8BChGGsB,EAAY,SAAChE,GAAD,MAAS,CAChCP,KAAMT,EAAoBC,WAC1BS,QAASM,IAGEiE,EAAe,SAACjE,GAAD,MAAS,CACnCP,KAAMT,EAAoBE,cAC1BQ,QAASM,ICAEkE,EAAa,yDAAM,WAAOpB,GAAP,eAAAE,EAAA,6DAC9BF,GALkBqB,GAKE,EALQ,CAC5B1E,KAAMZ,EAAgBE,QACtBW,QAASyE,KAKTrB,EAASkB,EAAU,kBAHW,SFJvBlC,IACJC,IAAI,cACJC,MAAK,SAACC,GACL,OAAOA,EAAIC,KAAKA,QAEjBC,OAAM,SAACQ,GACN,OAAO,QEFmB,UAIxBT,EAJwB,OAK9BY,EAASmB,EAAa,mBAElB/B,EAP0B,iBAQ5BY,EAAS,CACPrD,KAAMZ,EAAgBC,YACtBY,QAASwC,IAViB,8BAatB,IAAIE,MAAM,2BAbY,kCAJb,IAAC+B,IAIY,OAAN,uDCmBbC,EAAe,SAACC,GAE3B,IAGMC,EAAeC,KAAKC,IAAI,IAAIC,KAAS,IAAIA,KAAKJ,IAGpD,OAAOE,KAAKG,MAAMJ,EANF,Q,eCZLK,EAAS,WACpB,IAAMrF,EAAOsF,aAAY,SAAC5D,GAAD,OAAWA,EAAM1B,QACpCwD,EAAW+B,cAFS,EAGEC,oBAAS,GAHX,mBAGnBC,EAHmB,KAGXC,EAHW,KAIpBC,EAAaC,uBAAY,WAC7BpC,EAASG,OACR,CAACH,IACJ,OACE,kBAAC,IAAD,CAAWqC,MAAM,kBAAkBC,OAAK,GACtC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAgBC,MAAO,CAAEF,MAAO,UAC9B,kBAAC,IAAD,CAAYE,MAAO,CAAEC,OAAQ,KAAOC,GAAG,KAAvC,mBAIF,kBAAC,IAAD,CACEJ,MAAM,UACNE,MAAO,CAAEC,OAAQ,GACjBtF,GAAG,aACHwF,QAAS,kBAAMR,GAAWD,MAE5B,kBAAC,IAAD,CAAaA,OAAQA,EAAQU,QAAM,GACjC,kBAAC,IAAD,CAAcC,MAAI,GACfpG,EAAKzB,aACJ,oCACE,kBAAC,IAAD,CAAYwH,MAAO,CAAEM,UAAW,SAC9B,kBAAC,IAAD,CAAYJ,GAAG,iBAAf,gBAEF,kBAAC,IAAD,CAAYF,MAAO,CAAEM,UAAW,SAC9B,kBAAC,IAAD,CAAYJ,GAAG,iBAAf,iBAEF,kBAAC,IAAD,CAAYF,MAAO,CAAEM,UAAW,SAC9B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAmBC,KAAG,EAACC,OAAK,GAC1B,0BAAMC,UAAU,QAAQxG,EAAKxB,KAAKE,OAEpC,kBAAC,IAAD,CAAiB8H,UAAU,oBACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYP,GAAG,WAAf,iBAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEA,GAAG,GACHC,QAAS,WACPP,MAHJ,eAcV,oCACE,kBAAC,IAAD,CAAYI,MAAO,CAAEM,UAAW,SAC9B,kBAAC,IAAD,CAAYJ,GAAG,UAAf,UAEF,kBAAC,IAAD,CAAYF,MAAO,CAAEM,UAAW,SAC9B,kBAAC,IAAD,CAAYJ,GAAG,aAAf,kB,ogBCzElB,IAaeQ,GAbA,WAGb,OAFoBnB,aAAY,SAAC5D,GAAD,OAAWA,EAAMpB,YAAzCT,QACiB6G,MAAK,SAACjG,GAAD,OAAYA,EAAOO,UAE/C,kBAAC2F,GAAD,KACE,kBAACC,GAAD,KACE,kBAAC,KAAD,CAASzG,KAAK,OAAO0F,MAAM,OAAOgB,OAAQ,IAAKC,MAAO,MACtD,4CAGF,MAKAH,GAAQI,IAAOC,IAAV,MASLJ,GAAOG,IAAOC,IAAV,MCxBGC,GAAsB,SAAC,GAAkB,IAAhB/E,EAAe,EAAfA,SACpC,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,GAAD,MACCA,KCDMgF,GARc,SAAC,GAAkB,IAAhBhF,EAAe,EAAfA,SAC9B,OACE,kBAAC,IAAD,CAASsE,UAAU,kBACjB,kBAAC,IAAD,KAActE,KCFdiF,GAA6B,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACxC,OACI,oCACI,wBAAIb,UAAU,mDACTY,GAEJC,GAAW,2BAAIA,KAI5BF,GAA2BG,aAAe,CACtCD,QAAS,IAOEF,UCqDAI,GArEe,WAAO,IAC3B3I,EAAU0G,aAAY,SAACrF,GAAD,OAAWA,EAAMI,QAAvCzB,MACF4I,EAAUC,cAEhB,OACE,oCACG7I,EAAMwC,KAAI,SAACf,GAAD,OACT,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQqH,GAAG,KACT,kBAAC,IAAD,CAASlB,UAAU,iCAAiCmB,OAAK,EAACC,OAAK,GAC7D,yBACEpB,UAAU,YACVqB,IACExH,EAAKyH,UAAL,UAIU,KAJV,OAKOzH,EAAKyH,UAAUC,QAAQ,MAAO,MACjC,2DAENC,IAAI,KAEN,uBAAGC,KAAK,MACN,kBAAC,IAAD,CAASC,QAAQ,oBAIvB,kBAAC,IAAD,CAAQR,GAAG,KACRrH,EAAK6D,KAAK9C,KAAI,SAAC+G,EAAKC,GACnB,OACE,uBAAGH,KAAK,KAAKzB,UAAU,cACrB,wBAAIA,UAAU,kCACX2B,EAAIzJ,KAAKqJ,QAAQ,KAAM,IACvBK,EAAQ,IAAM/H,EAAK6D,KAAKmE,QAAU,UAK3C,wBAAI7B,UAAU,6BACZ,gCAASnG,EAAK2D,UAEhB,gCAEE,uBAAGiE,KAAK,MACN,oCAAU5H,EAAKiI,OAAO5J,OAH1B,eAKQoG,EAAazE,EAAKkI,aAL1B,SAOA,kBAAC,IAAD,CACE1C,MAAM,UACN2C,KAAK,KACLhC,UAAU,cACVN,QAAS,WACPsB,EAAQvG,KAAK,eAAiBZ,EAAKvB,OALvC,eAYJ,wBAAI0H,UAAU,eCxDXiC,GAAW,WACtB,IAAMjF,EAAW+B,cADW,EAECD,aAAY,SAACrF,GAAD,OAAWA,EAAMI,QAF9B,EAEpBzB,MAFoB,EAEbS,UAYf,OAXAqJ,qBAAU,WACRlF,EAASoB,KACTpB,EAASD,KACT,IAAMoF,EAAmBC,aAAY,WACnCpF,EAASoB,OACR,KAEH,OAAO,WACLiE,cAAcF,MAEf,CAACnF,IAEF,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAA4B4D,MAAO,kBACnC,kBAAC,GAAD,S,iRCzBR,IAAM0B,GAAc,SAAC,GAAD,IAAG5G,EAAH,EAAGA,SAAH,OAAkB,kBAAC6G,GAAD,KAAU7G,IAE1C6G,GAAUhC,IAAOC,IAAV,M,SCJAgC,GAAmBC,OAAaC,MAAM,CACjDvK,MAAOsK,OACJtK,MAAM,oBACNwK,SAAS,sBACZzK,KAAMuK,OAAaE,SAAS,qBAC5BjG,SAAU+F,OACPG,IAAI,EAAG,gDACPD,SAAS,yBACZE,gBAAiBJ,OACdE,WACAG,MAAM,CAACL,KAAQ,aAAc,2BAErBM,GAAgB,CAC3B5K,MAAO,GACPD,KAAM,GACNwE,SAAU,GACVmG,gBAAiB,GACjBlG,OAAQ,M,0QCjBe4D,IAAOC,IAAV,MAAf,IAIMwC,GAAsBzC,IAAOC,IAAV,M,wqCCHzB,IAAMyC,GAAS,SAAC,GAQhB,IACDC,EARJvJ,EAOI,EAPJA,KACA+F,EAMI,EANJA,QACAyD,EAKI,EALJA,SACAzH,EAII,EAJJA,SACAsG,EAGI,EAHJA,KACAoB,EAEI,EAFJA,gBACGC,EACC,iFAGJ,OAAQ1J,GACN,IAAK,SACHuJ,EACE,kBAACI,GAAD,eACE5D,QAASA,EACTyD,SAAUA,EACVnB,KAAMA,EACNoB,gBAAiBA,GACbC,GAEH3H,GAGL,MACF,IAAK,SACHwH,EACE,kBAACK,GAAD,eACE7D,QAASA,EACTyD,SAAUA,EACVnB,KAAMA,EACNoB,gBAAiBA,GACbC,GAEH3H,GAGL,MACF,QACEwH,EACE,kBAACK,GAAD,eACE7D,QAASA,EACTyD,SAAUA,EACVnB,KAAMA,EACNoB,gBAAiBA,GACbC,GAEH3H,GAIT,OAAOwH,GAEHI,GAAe/C,IAAOiD,OAAV,MAEL,SAACC,GAAD,MAA2B,QAAfA,EAAMzB,KAAiB,aAAe,kBAE/C,SAACyB,GAAD,OAAWA,EAAMC,MAAMD,EAAML,oBAMvB,SAACK,GAAD,OAAWA,EAAMC,MAAMD,EAAML,oBAM/B,SAACK,GAAD,OAAWA,EAAMC,MAAMD,EAAML,oBACpC,SAACK,GAAD,OAAWA,EAAMC,MAAMD,EAAML,oBAKtB,SAACK,GAAD,OAAWA,EAAMC,MAAMD,EAAML,oBAEvB,SAACK,GAAD,OAAWA,EAAMC,MAAMD,EAAML,oBAMjDG,GAAehD,IAAOiD,OAAV,MAEL,SAACC,GAAD,MAA2B,QAAfA,EAAMzB,KAAiB,aAAe,kBAE/C,SAACyB,GAAD,OAAWA,EAAMC,MAAMD,EAAML,oBAMvB,SAACK,GAAD,OAAWA,EAAMC,MAAMD,EAAML,oBAM/B,SAACK,GAAD,OAAWA,EAAMC,MAAMD,EAAML,oBACpC,SAACK,GAAD,OAAWA,EAAMC,MAAMD,EAAML,oBAKtB,SAACK,GAAD,OAAWA,EAAMC,MAAMD,EAAML,oBAEvB,SAACK,GAAD,OAAWA,EAAMC,MAAMD,EAAML,oB,8uCC5GvD,IAAMO,GAASC,YAAH,MAQCC,GAAetD,IAAOC,IAAV,MAInB,SAACiD,GAAD,OACAA,EAAMK,QACFL,EAAMM,MACJN,EAAMC,MAAMM,OACZP,EAAMC,MAAMO,QACdR,EAAMC,MAAMQ,QAETC,GAAY5D,IAAOC,IAAV,MAMX,SAACiD,GAAD,OACPA,EAAMK,QACFL,EAAMM,MACJN,EAAMC,MAAMM,OACZP,EAAMC,MAAMO,QACdR,EAAMC,MAAMQ,QAEPE,GAAO7D,IAAOC,IAAV,MAIN,SAACiD,GAAD,OAAYA,EAAMM,MAAQN,EAAMC,MAAMM,OAASP,EAAMC,MAAMO,WAEzDI,GAAe9D,IAAO+D,EAAV,MACd,SAACb,GAAD,OAAWA,EAAMC,MAAMM,SAEhBL,IAELY,GAAahE,IAAOC,IAAV,MAIVgE,GAAajE,IAAOkE,MAAV,MAEZ,SAAChB,GAAD,OACPA,EAAMK,QACFL,EAAMM,MACJN,EAAMC,MAAMM,OACZP,EAAMC,MAAMO,QACdR,EAAMC,MAAMQ,QAIPQ,GAAanE,IAAOoE,MAAV,MAEV,SAAClB,GAAD,OAAWA,EAAMmB,SAAW,SC9CnCC,GAAY,SAAC,GAkBZ,IAjBLC,EAiBI,EAjBJA,WACAhB,EAgBI,EAhBJA,QACAiB,EAeI,EAfJA,WACA7M,EAcI,EAdJA,KAGAyB,GAWI,EAbJqL,UAaI,EAZJC,UAYI,EAXJtL,MACA8K,EAUI,EAVJA,MACAS,EASI,EATJA,SACAC,EAQI,EARJA,MACApB,EAOI,EAPJA,MACAnH,EAMI,EANJA,aAEAwI,GAII,EALJC,MAKI,EAJJD,QACAE,EAGI,EAHJA,uBACAC,EAEI,EAFJA,YACGlC,EACC,qMACEnJ,EAAKsL,OACX,OACE,kBAACjB,GAAD,KACE,kBAACC,GAAD,CAAYT,MAAOA,EAAOD,QAASA,EAAS2B,QAASvL,GAClDuK,GAEH,kBAACZ,GAAD,CAAcE,MAAOA,EAAOD,QAASA,GAClCiB,GACC,kBAACZ,GAAD,CAAWJ,MAAOA,EAAOD,QAASA,GAChC,kBAACiB,EAAD,OAIJ,kBAACL,GAAD,eACEa,YAAaA,EACbJ,MAAOA,EACPjN,KAAMA,EACNgC,GAAIA,EACJP,KAAMA,GACF0J,EANN,CAOE+B,OAAQA,EACRF,SAAUA,KAEZ,kBAACd,GAAD,CAAML,MAAOA,GAASD,IAClBC,GAASD,GAAW,kBAAC,KAAD,MACrBC,GAASD,GAAW,kBAAC,KAAD,CAASpE,QAASoF,MAG1Cf,GAASD,IAAYwB,GACpB,kBAACjB,GAAD,KAAezH,GAEhB0I,GAA0B,kBAACjB,GAAD,KAAezH,K,+bAKhDiI,GAAU/D,aAAe,CACvBgE,WAAY,aACZC,WAAY,KACZC,UAAW,EACXC,eAAWS,EACX/L,KAAM,OACN8K,MAAO,GACPV,OAAO,EACPnH,aAAc,GACdyI,MAAO,GACPD,OAAQ,aACRE,wBAAwB,EACxBC,YAAa,GACbzB,SAAS,GCpEX,IAAM6B,GAAY,SAAC,GAOZ,IANLlB,EAMI,EANJA,MACAc,EAKI,EALJA,YACAJ,EAII,EAJJA,MACAG,EAGI,EAHJA,uBACAJ,EAEI,EAFJA,SACG7B,EACC,mFACE0B,EAAaa,KADf,EAEsB5G,oBAAS,GAF/B,mBAEG+E,EAFH,KAEU8B,EAFV,OAG0B7G,oBAAS,GAHnC,mBAGG8E,EAHH,KAGYgC,EAHZ,OAK8C9G,oBAAS,GALvD,mBAKG+G,EALH,KAKsBC,EALtB,OAMoChH,mBAAS,IAN7C,mBAMGiH,EANH,KAMiBC,EANjB,OAQgBlH,qBARhB,mBAQG9E,EARH,KAQOiM,EARP,KAUJjE,qBAAU,WACRiE,EAAMX,UACL,IACH,IAAMY,EAAe,SAACC,GACpB,GAAIA,EAAG,CACLA,EAAEC,iBAEF,IAAMC,EAAS,IAAIC,WACbC,EAAOJ,EAAEK,OAAOC,MAAM,GACxBF,EACFF,EAAOK,UAAY,WACjB,IAAMC,EAAaN,EAAOO,OAIxBd,GAHGa,GAKLX,EAAgBW,GAChB3B,EAASuB,GAAM,GACfX,GAAW,GACXD,GAAS,IAGXA,GAAS,GAGXU,EAAOQ,cAAcN,QAErBvB,EAAS,MAAM,IAGnB,OACE,kBAAC8B,GAAD,KACE,kBAACC,GAAD,CAAiB5F,IAAK4E,IACtB,kBAAC1B,GAAD,KACE,kBAACC,GAAD,CAAYT,MAAOA,EAAOD,QAASA,EAAS2B,QAASvL,GAClDuK,GAEH,kBAACZ,GAAD,CAAcE,MAAOA,EAAOD,QAASA,GAClCiB,GACC,kBAACZ,GAAD,CAAWJ,MAAOA,EAAOD,QAASA,GAChC,kBAACiB,EAAD,OAGJ,kBAACmC,GAAD,CAAmBC,KAAMhC,GAASA,EAAMjN,MACtC,kBAACwM,GAAD,eACEE,QAAQ,IACRW,YAAaA,EACbrL,GAAIA,EACJgL,SAAUkB,EACVzM,KAAK,QACD0J,KAGR,kBAACe,GAAD,CAAML,MAAOA,GAASD,IAClBC,GAASD,GAAW,kBAAC,KAAD,MACrBC,GAASD,GAAW,kBAAC,KAAD,CAASpE,QAAS,kBAAM0G,SAGhDrC,GAASD,IAAYwB,GACpB,kBAACjB,GAAD,6CAED0B,GAAqBjC,GACpB,kBAACO,GAAD,yCAEDiB,GACC,kBAACjB,GAAD,4CAMJ4C,GAAkB1G,IAAO6G,IAAV,MAIfJ,GAAsBzG,IAAOC,IAAV,MAInB0G,GAAoB3G,IAAOC,IAAV,MAKP,SAACiD,GAAD,OAAWA,EAAM0D,MAAQ,MAMzCxB,GAAU7E,aAAe,CACvB2D,MAAO,GACPc,YAAa,GACbD,wBAAwB,EACxBH,MAAO,MC1HT,IAAMkC,GAAiB,SAAC,GAAD,IACrBC,EADqB,EACrBA,OACAxD,EAFqB,EAErBA,QACAyD,EAHqB,EAGrBA,OACAC,EAJqB,EAIrBA,aACAC,EALqB,EAKrBA,WACAC,EANqB,EAMrBA,cANqB,OAQrB,oCACE,kBAAC,GAAD,CACE3C,WAAY4C,KACZ/K,aAAc0K,EAAOpP,KACrB6L,MAAO6D,QAAQN,EAAOpP,MACtB4L,QAASA,EAAQ5L,KACjBuM,MAAM,YACNK,WAAY,kBAAM4C,EAAc,OAAQ,KACxCvC,MAAOoC,EAAOrP,KACdA,KAAK,OACLgN,SAAUsC,EACVpC,OAAQqC,IAEV,kBAAC,GAAD,CACE1C,WAAY8C,KACZjL,aAAc0K,EAAOnP,MACrB4L,MAAO6D,QAAQN,EAAOnP,OACtB2L,QAASA,EAAQ3L,MACjBsM,MAAM,aACNK,WAAY,kBAAM4C,EAAc,QAAS,KACzCvC,MAAOoC,EAAOpP,MACdD,KAAK,QACLgN,SAAUsC,EACVpC,OAAQqC,IAEV,kBAAC,GAAD,CACE1C,WAAY+C,KACZnO,KAAK,WACLiD,aAAc0K,EAAO5K,SACrBoI,WAAY,kBAAM4C,EAAc,WAAY,KAC5C3D,MAAO6D,QAAQN,EAAO5K,UACtBoH,QAASA,EAAQpH,SACjB+H,MAAM,gBACNU,MAAOoC,EAAO7K,SACdxE,KAAK,WACLgN,SAAUsC,EACVpC,OAAQqC,IAEV,kBAAC,GAAD,CACE1C,WAAY+C,KACZnO,KAAK,WACLiD,aAAc0K,EAAOzE,gBACrBkB,MAAO6D,QAAQN,EAAOzE,iBACtBiC,WAAY,kBAAM4C,EAAc,kBAAmB,KACnD5D,QAASA,EAAQjB,gBACjB4B,MAAM,mBACNU,MAAOoC,EAAO1E,gBACd3K,KAAK,kBACLgN,SAAUsC,EACVpC,OAAQqC,IAEV,kBAAC,GAAD,CACEvC,SAAU,SAACuB,GAAD,OAAUiB,EAAc,SAAUjB,IAC5CtB,MAAOoC,EAAO5K,WAIpB0K,GAAevG,aAAe,CAC5BwG,OAAQ,GACRxD,QAAS,IAUIuD,UC5ETU,GAAe,SAAC,GAWf,IAVLT,EAUI,EAVJA,OACAC,EASI,EATJA,OACAC,EAQI,EARJA,aACAE,EAOI,EAPJA,cACAD,EAMI,EANJA,WACA3D,EAKI,EALJA,QACAkE,EAII,EAJJA,aACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,aACAC,EACI,EADJA,YACI,EACsBnJ,mBAASmJ,GAD/B,mBACGpE,EADH,KACU8B,EADV,KAKJ,OAHA3D,qBAAU,WACR2D,EAASsC,KACR,CAACA,IAEF,oCACGpE,GACC,kBAAC,IAAD,CACE1E,MAAM,SACN+I,SAAO,EACPC,QAAS,WACPxC,EAAS,MAGV9B,GAGL,0BAAMuE,SAAUJ,GACd,kBAAC,GAAD,CACEZ,OAAQA,EACRC,OAAQA,EACRC,aAAcA,EACdE,cAAeA,EACfD,WAAYA,EACZ3D,QAASA,IAEX,kBAACd,GAAD,KACE,kBAAC,GAAD,CACEI,gBAAiB6E,EAAU,UAAY,SACvC9E,UAAW8E,GAAWD,GAFxB,gBAWVD,GAAajH,aAAe,CAC1BqH,YAAa,IAeAJ,U,SCRAQ,GAlDM,WACnB,IAAMvL,EAAW+B,cADQ,EAEaC,mBAAS,IAFtB,mBAElBmJ,EAFkB,KAELK,EAFK,KAGjBC,EAAaC,uBAAbD,SAEFH,EAAQ,uCAAG,WAAOf,EAAP,4BAAArK,EAAA,6DAAiByL,EAAjB,EAAiBA,gBAClB,GACd3L,EAASkB,EAAU,yBAFJ,SAGgC3B,EAAagL,GAH7C,mBAGPzO,EAHO,EAGPA,SAAUsD,EAHH,EAGGA,KAAMQ,EAHT,EAGSA,aACxBI,EAASmB,EAAa,yBAEtBwK,GAAc,IACV7P,EAPW,wBAQb2P,EAAS,yBAA0B,CAAEG,WAAY,UACjDJ,EAAe5L,GATF,2BAaThD,EAAU,CACd1B,KAAMkE,EAAKpE,KAAKE,KAChBC,MAAOiE,EAAKpE,KAAKG,MACjBF,YAAamE,EAAKpE,KAAKC,YACvBG,MAAOgE,EAAKpE,KAAKI,MACjBC,eAAgB+D,EAAKpE,KAAKK,eAE1B6B,GAAIkC,EAAKpE,KAAKM,KAEhBkQ,EAAe,IAEfC,EAAS,qBAAsB,CAAEG,WAAY,YAC7CH,EAAS,6BAA8B,CAAEG,WAAY,SACrD5L,EAASM,EAAM1D,IA1BA,4CAAH,wDA4BRiP,EAASC,aAAU,CACvB/F,iBACAP,oBACA8F,aAEF,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAA4B1H,MAAM,aAClC,kBAAC,GAAD,KACE,kBAAC,GAAD,iBAAkBiI,EAAlB,CAA0BV,YAAaA,SCrD3CY,GAAuB,SAAC,GAAD,IAC3BzB,EAD2B,EAC3BA,OACAxD,EAF2B,EAE3BA,QACAyD,EAH2B,EAG3BA,OACAC,EAJ2B,EAI3BA,aACAC,EAL2B,EAK3BA,WACAC,EAN2B,EAM3BA,cAN2B,OAQ3B,oCACE,kBAAC,GAAD,CACE3C,WAAY8C,KACZjL,aAAc0K,EAAOnP,MACrB4L,MAAO6D,QAAQN,EAAOnP,OACtB2L,QAASA,EAAQ3L,MACjBsM,MAAM,aACNU,MAAOoC,EAAOpP,MACdD,KAAK,QACL4M,WAAY,kBAAM4C,EAAc,QAAS,KACzCxC,SAAUsC,EACVpC,OAAQqC,IAEV,kBAAC,GAAD,CACE1C,WAAY+C,KACZnO,KAAK,WACLiD,aAAc0K,EAAO5K,SACrBqH,MAAO6D,QAAQN,EAAO5K,UACtBoI,WAAY,kBAAM4C,EAAc,WAAY,KAC5C5D,QAASA,EAAQpH,SACjB+H,MAAM,gBACNU,MAAOoC,EAAO7K,SACdxE,KAAK,WACLgN,SAAUsC,EACVpC,OAAQqC,MAIdsB,GAAqBjI,aAAe,CAClCwG,OAAQ,GACRxD,QAAS,IAUIiF,UCkBAC,GA/DY,SAAC,GAWrB,IAVL1B,EAUI,EAVJA,OACAC,EASI,EATJA,OACAC,EAQI,EARJA,aACAE,EAOI,EAPJA,cACAD,EAMI,EANJA,WACA3D,EAKI,EALJA,QACAkE,EAII,EAJJA,aACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,aACAC,EACI,EADJA,YACI,EACsBnJ,mBAASmJ,GAD/B,mBACGpE,EADH,KACU8B,EADV,KAKJ,OAHA3D,qBAAU,WACR2D,EAASsC,KACR,CAACA,IAEF,oCACGpE,GACC,kBAAC,IAAD,CACE1E,MAAM,SACN+I,SAAO,EACPC,QAAS,WACPxC,EAAS,MAGV9B,GAIL,0BAAMuE,SAAUJ,GACd,kBAAC,GAAD,CACEZ,OAAQA,EACRC,OAAQA,EACRC,aAAcA,EACdE,cAAeA,EACfD,WAAYA,EACZ3D,QAASA,IAEX,kBAACd,GAAD,KACE,kBAAC,GAAD,CACEI,gBAAiB6E,EAAU,UAAY,SACvC9E,UAAW8E,GAAWD,GAFxB,aCoCKiB,GAvEG,WAAO,IAAD,EACgBjK,mBAAS,IADzB,mBACfmJ,EADe,KACFK,EADE,KAEhBxL,EAAW+B,cACT0J,EAAaC,uBAAbD,SACFjG,EAAmBC,OAAaC,MAAM,CAC1CvK,MAAOsK,OACJtK,MAAM,oBACNwK,SAAS,sBACZjG,SAAU+F,OACPG,IAAI,EAAG,gDACPD,SAAS,2BAERkG,EAASC,aAAU,CACvB/F,cAAe,CACb5K,MAAO,GACPuE,SAAU,IAEZ8F,mBACA8F,SAAU,SAACf,EAAD,GAAgC,IAArBoB,EAAoB,EAApBA,cACnBA,GAAc,GACd3L,EAASkB,EAAU,UACnBlC,IACGnC,KAAK,aAAc,CAClB1B,MAAOoP,EAAOpP,MACduE,SAAU6K,EAAO7K,WAElBR,MAAK,SAACC,GAEL,GADAwM,GAAc,GACQ,MAAlBxM,EAAIC,KAAK8M,KAAc,CACzBlM,EAASmB,EAAa,UAEtB,IAAMvE,EAAU,CACd1B,KAAMiE,EAAIC,KAAKpE,KAAKE,KACpBC,MAAOgE,EAAIC,KAAKpE,KAAKG,MACrBiF,QAASjB,EAAIC,KAAKpE,KAAKqF,MACvBpF,YAAakE,EAAIC,KAAKpE,KAAKC,YAC3BG,MAAO+D,EAAIC,KAAKpE,KAAKI,MACrBC,eAAgB8D,EAAIC,KAAKpE,KAAKK,eAE9B6B,GAAIiC,EAAIC,KAAKpE,KAAKM,KAEpB0E,EAASM,EAAM1D,IACf6O,EAAS,qBAAsB,CAAEG,WAAY,YAC7CH,EAAS,6BAA8B,CAAEG,WAAY,SACrDJ,EAAe,SAEfxL,EAASmB,EAAa,UACtBqK,EAAerM,EAAIC,KAAKQ,cAE1BlC,QAAQC,IAAIwB,MAEbE,OAAM,WACLmM,EAAe,4BACfxL,EAASmB,EAAa,UAEtBwK,GAAc,SAItB,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAA4B/H,MAAM,UAClC,kBAAC,GAAD,KACE,kBAAC,GAAD,iBAAwBiI,EAAxB,CAAgCV,YAAaA,SC3E1C3F,GAAmBC,OAAaC,MAAM,CACjDlF,QAASiF,OACNE,SAAS,wBACTC,IAAI,GACJuG,IAAI,IACP1L,KAAMgF,OAAaE,SAAS,6BAC5BjF,KAAM+E,OAAaE,SAAS,wBAEjBI,GAAgB,CAC3BvF,QAAS,GACTC,KAAM,GACNC,KAAM,GACNC,UAAW,M,oDCPPyL,GAAoB,SAAC,GAUpB,IATLtF,EASI,EATJA,QAEAW,GAOI,EARJvM,KAQI,EAPJuM,OACAS,EAMI,EANJA,SACAC,EAKI,EALJA,MACApB,EAII,EAJJA,MACAnH,EAGI,EAHJA,aACAwI,EAEI,EAFJA,OACG/B,EACC,6FACEnJ,EAAKsL,OACX,OACE,kBAACjB,GAAD,KACE,kBAACC,GAAD,CAAYT,MAAOA,EAAOD,QAASA,EAAS2B,QAASvL,GAClDuK,GAEH,kBAAC,KAAD,iBACMpB,EADN,CAEEgG,OAAQC,KACRlN,KAAM+I,EACND,SAAU,SAACqE,EAAOF,GAChB,IAAMjN,EAAOiN,EAAOG,UACpBtE,EAAS9I,IAEXgJ,OAAQ,SAACmE,EAAOF,GACd,IAAMjN,EAAOiN,EAAOG,UACpBpE,EAAOhJ,OAGV2H,GAASD,GAAW,kBAACO,GAAD,KAAezH,KAK1CwM,GAAkBtI,aAAe,CAC/BiD,OAAO,EACPnH,aAAc,GACdwI,OAAQ,aACRtB,SAAS,G,yBCvCL2F,GAA4B,SAAC,GAQ5B,IAPLnC,EAOI,EAPJA,OACAxD,EAMI,EANJA,QACAyD,EAKI,EALJA,OACAC,EAII,EAJJA,aACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,cACA5B,EACI,EADJA,WACI,EACkB9G,mBAASwG,QAD3B,mBACG1K,EADH,KACQ4O,EADR,OAEoC1K,mBAAS,MAF7C,mBAEG2K,EAFH,KAEiBC,EAFjB,KASJ,OANA1H,qBAAU,WACa,OAAjByH,GAA0C,KAAjBA,GAC3BD,EAAOlE,QAEToE,EAAgBrC,EAAO9J,QACtB,CAAC8J,EAAO9J,OAET,oCACE,kBAAC,GAAD,CACEsH,WAAY8C,KACZjL,aAAc0K,EAAO9J,QACrBuG,MAAO6D,QAAQN,EAAO9J,SACtBsG,QAASA,EAAQtG,QACjBiH,MAAM,UACNU,MAAOoC,EAAO/J,QACdtF,KAAK,UACL4M,WAAY,kBAAM4C,EAAc,UAAW,KAC3CxC,SAAUsC,EACVpC,OAAQqC,IAEV,kBAAC,GAAD,CACE1C,WAAY8E,KACZjN,aAAc0K,EAAO5J,KACrBqG,MAAO6D,QAAQN,EAAO5J,MACtBoG,QAASA,EAAQpG,KACjB+G,MAAM,OACNU,MAAOoC,EAAO7J,KACdxF,KAAK,OACL4M,WAAY,kBAAM4C,EAAc,OAAQ,KACxCnC,YAAa,sBACbL,SAAUsC,EACVpC,OAAQqC,IAEV,kBAAC,GAAD,CACE1C,WAAY8C,KACZ/M,IAAKA,EACL8B,aAAc0K,EAAO7J,KACrBsG,MAAO6D,QAAQN,EAAO7J,MACtBqG,QAASA,EAAQrG,KACjBgH,MAAM,OACNU,MAAOoC,EAAO9J,KACdvF,KAAK,OACLgN,SAAU,SAAC9I,GACTsL,EAAc,OAAQtL,IAExBgJ,OAAQ,SAAChJ,GACPsL,EAAc,OAAQtL,GACtB0J,EAAW,2BAAKhC,GAAN,IAAerG,MAAM,QAGnC,kBAAC,GAAD,CACEgH,MAAO,YACPS,SAAU,SAACuB,GAAD,OAAUiB,EAAc,YAAajB,IAC/CtB,MAAOoC,EAAO5K,WAKtB8M,GAA0B3I,aAAe,CACvCwG,OAAQ,GACRxD,QAAS,IAUI2F,UCfAK,GAlEiB,SAAC,GAa1B,IAZLxC,EAYI,EAZJA,OACAC,EAWI,EAXJA,OACAC,EAUI,EAVJA,aACAE,EASI,EATJA,cACAD,EAQI,EARJA,WACA3D,EAOI,EAPJA,QACAkE,EAMI,EANJA,aACAC,EAKI,EALJA,QACAC,EAII,EAJJA,aACApC,EAGI,EAHJA,WACAqC,EAEI,EAFJA,YACA4B,EACI,EADJA,SACI,EACsB/K,mBAASmJ,GAD/B,mBACGpE,EADH,KACU8B,EADV,KAKJ,OAHA3D,qBAAU,WACR2D,EAASsC,KACR,CAACA,IAEF,oCACGpE,GACC,kBAAC,IAAD,CACE1E,MAAM,SACN+I,SAAO,EACPC,QAAS,WACPxC,EAAS,MAGV9B,GAIL,0BAAMuE,SAAUJ,GACd,kBAAC,GAAD,CACEZ,OAAQA,EACRC,OAAQA,EACRC,aAAcA,EACdE,cAAeA,EACfD,WAAYA,EACZ3D,QAASA,EACTgC,WAAYA,IAEd,kBAAC9C,GAAD,KACE,kBAAC,GAAD,CACEI,gBAAiB6E,EAAU,UAAY,SACvC9E,UAAW8E,GAAWD,GAErB+B,EAAW,YAAc,mBCSvBC,GA9CQ,WAAO,IAAD,EACWhL,mBAAS,IADpB,mBACpBmJ,EADoB,KACPK,EADO,KAErBxL,EAAW+B,cACXkL,EAAevB,uBACb1Q,EAAS8G,aAAY,SAAC5D,GAAD,OAAWA,EAAM1B,QAAtCxB,KACF6Q,EAASC,aAAU,CACvB/F,iBACAP,oBACA8F,SAAS,WAAD,4BAAE,WAAOf,EAAP,4BAAArK,EAAA,6DAAiByL,EAAjB,EAAiBA,gBACX,GACd3L,EAASkB,EAAU,gBAFX,SAGuCX,EAAW,CACxD1B,MAAO7D,EAAKC,YACZuF,QAAS+J,EAAO/J,QAChBC,KAAM8J,EAAO9J,KACbC,KAAM6J,EAAO7J,KACbC,UAAW4J,EAAO5J,YARZ,gBAGA7E,EAHA,EAGAA,SAAU8D,EAHV,EAGUA,aAAcR,EAHxB,EAGwBA,KAOhCY,EAASmB,EAAa,gBAEtBwK,GAAc,GAEV7P,GACFmR,EAAaxB,SAAS7L,EAAc,CAAEgM,WAAY,UAClDJ,GAAmB,OAAJpM,QAAI,IAAJA,GAAA,UAAAA,EAAMkL,cAAN,eAAe,KAAM,IACpC5M,QAAQC,IAAI,yBAA0ByB,KAEtC6N,EAAaxB,SAAS,4BAA6B,CACjDG,WAAY,YAEd5L,EAASD,KACTC,EAASoB,MAvBH,4CAAF,qDAAC,KA2BX,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAA4BwC,MAAM,kBAClC,kBAAC,GAAD,KACE,kBAAC,GAAD,iBAA6BiI,EAA7B,CAAqCV,YAAaA,SC0B7C+B,GAzEQ,SAAC,GAAc,IAAZlS,EAAW,EAAXA,KAClBgF,EAAW+B,cACT0J,EAAaC,uBAAbD,SACFzH,EAAUC,cACV7E,EAAO,CACX+N,QAAS,CACP,CACE1F,MAAO,aACP2F,MAAO,YACPC,KAAM,MACN/J,MAAO,KAET,CACEmE,MAAO,aACP2F,MAAO,aACPC,KAAM,MACN/J,MAAO,KAET,CACEmE,MAAO,UACP2F,MAAO,UACPC,KAAM,MACN/J,MAAO,MAGXgK,KAAMtS,EAAKI,MAAMwC,KAAI,SAACf,GAAD,MAAW,CAC9B0Q,UAAW1Q,EAAK2D,QAChBuE,WAAY,IAAIpD,KAAK9E,EAAKkI,YAAYyI,eACtCC,QAAS,CACP,kBAAC,IAAD,CACE/K,QAAO,sBAAE,gCAAAxC,EAAA,6DACPF,EAASkB,EAAU,gBADZ,SAEkCN,EAAW,CAClD/B,MAAO7D,EAAKC,YACZ4F,OAAQhE,EAAKvB,MAJR,mBAECsE,EAFD,EAECA,aAAc9D,EAFf,EAEeA,SAItBkE,EAASmB,EAAa,iBAElBrF,EARG,wBASL2P,EAAS7L,EAAc,CAAEgM,WAAY,UAThC,2BAYPH,EAAS,6BAA8B,CAAEG,WAAY,YAErD5L,EAASD,KACTC,EAASoB,KAfF,4CAiBTiB,MAAO,UAlBT,UAsBA,kBAAC,IAAD,CACEK,QAAO,sBAAE,sBAAAxC,EAAA,sDACP8D,EAAQvG,KAAK,eAAiBZ,EAAKvB,KAD5B,2CAGT+G,MAAO,WAJT,cAWN,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAcqL,SAAO,EAACC,UAAQ,EAACxJ,OAAK,EAAC/E,KAAMA,OCzDpCwO,GAZQ,WAAO,IACpB5S,EAAS8G,aAAY,SAAC5D,GAAD,OAAWA,EAAM1B,QAAtCxB,KAER,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAA4B4I,MAAO,iBACnC,kBAAC,GAAD,CAAgB5I,KAAMA,OCuFf6S,GAhFM,SAAC,GAKf,IAJMpQ,EAIP,EAJJuG,QAAWvG,KAECP,EAER,EAHJ4Q,MACEC,OAAU7Q,GAER,EACkC8E,mBAAS,IAD3C,mBACGmJ,EADH,KACgBK,EADhB,OAEsCxJ,mBAASgM,IAF/C,mBAEGjI,EAFH,KAEkBkI,EAFlB,KAGEjO,EAAW+B,cACXkL,EAAevB,uBAEb1Q,EAAS8G,aAAY,SAAC5D,GAAD,OAAWA,EAAM1B,QAAtCxB,KACRkK,qBAAU,WACR,IAAMrI,EAAO7B,EAAKI,MAAM8S,MAAK,SAACrR,GAAD,OAAUA,EAAKvB,MAAQ4B,KAC/CL,EAOHoR,EAAiB,CACfzN,QAAS3D,EAAK2D,QACdC,KAAM5D,EAAK4D,KACXC,KAAM7D,EAAK6D,KACRyN,QAAO,SAACC,EAAKC,GAAN,OAAeD,EAAIE,OAAOD,EAAKnT,QAAO,IAC7CqT,KAAK,MACR5N,UAAW,QAZbsM,EAAaxB,SAAS,+BAAgC,CACpDG,WAAY,UAEdqB,EAAaxB,SAAS,sBAAuB,CAAEG,WAAY,SAC3DnO,EAAK,QAWN,IACH,IAAMoO,EAASC,aAAU,CACvB/F,gBACAP,oBACAgJ,oBAAoB,EACpBlD,SAAS,WAAD,4BAAE,WAAOf,EAAP,0BAAArK,EAAA,6DAAiByL,EAAjB,EAAiBA,gBACX,GACd3L,EAASkB,EAAU,cAFX,SAGuCH,EAC7C/F,EAAKC,YACLiC,EACA,CACEsD,QAAS+J,EAAO/J,QAChBC,KAAM8J,EAAO9J,KACbC,KAAM6J,EAAO7J,KACbC,UAAW4J,EAAO5J,YAVd,gBAGA7E,EAHA,EAGAA,SAAU8D,EAHV,EAGUA,aAAcR,EAHxB,EAGwBA,KAUhCY,EAASmB,EAAa,cAEtBwK,GAAc,GAEV7P,GACFmR,EAAaxB,SAAS7L,EAAc,CAAEgM,WAAY,UAClDJ,EAAe5L,GACflC,QAAQC,IAAI,mBAAoByB,KAEhC6N,EAAaxB,SAAS,4BAA6B,CACjDG,WAAY,YAEd5L,EAASD,KACTC,EAASoB,MA1BH,4CAAF,qDAAC,KA8BX,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAA4BwC,MAAM,cAClC,kBAAC,GAAD,KACE,kBAAC,GAAD,iBACMiI,EADN,CAEEkB,UAAQ,EACR5B,YAAaA,S,mLC5ElB,IAAMsD,GAAe,SAAC,GAItB,IAFOvR,EAER,EAHJ4Q,MACEC,OAAU7Q,GAINL,EADQiF,aAAY,SAACrF,GAAD,OAAWA,EAAMI,KAAKzB,SAC7B8S,MAAK,SAACrR,GAAD,OAAUA,EAAKvB,MAAQ4B,KAE/C,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAA4B0G,MAAO,KACnC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQM,GAAG,KACT,kBAAC,IAAD,CAASlB,UAAU,iCAAiCmB,OAAK,EAACC,OAAK,GAC7D,yBACEpB,UAAU,YACVqB,IACExH,EAAKyH,UAAL,UAIU,KAJV,OAKOzH,EAAKyH,UAAUC,QAAQ,MAAO,MACjC,2DAENC,IAAI,KAEN,uBAAGC,KAAK,MACN,kBAAC,IAAD,CAASC,QAAQ,oBAIvB,kBAAC,IAAD,CAAQR,GAAG,KACT,kBAAC,GAAD,KACE,2BACGrH,EAAK6D,KAAK9C,KAAI,SAAC+G,EAAKC,GACnB,OACE,uBAAGH,KAAK,KAAKzB,UAAU,uBACrB,wBAAIA,UAAU,kCACX2B,EAAIzJ,KAAKqJ,QAAQ,KAAM,IACvBK,EAAQ,IAAM/H,EAAK6D,KAAKmE,QAAU,WAM7C,wBAAI7B,UAAU,6BACZ,gCAASnG,EAAK2D,UAEhB,gCAEE,uBAAGiE,KAAK,MACN,oCAAU5H,EAAKiI,OAAO5J,OAH1B,eAKQoG,EAAazE,EAAKkI,aAL1B,YAUN,wBAAI/B,UAAU,SACd,yBAAK0L,wBAAyB,CAAEC,OAAQ9R,EAAK4D,YAOjD2C,GAAOG,IAAOC,IAAV,MC3EJoL,GAAoB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,UAAcxI,EAAW,6BAC9C7J,EAAOsF,aAAY,SAACrF,GAAD,OAAWA,EAAMD,QAE1C,OACE,kBAAC,IAAD,iBACM6J,EADN,CAEEH,OAAQ,SAACO,GAAD,OACLjK,EAAKzB,aAA0C,kBAAC,IAAD,CAAU0H,GAAG,MAAxC,kBAACoM,EAAcpI,QAKtCqI,GAAiB,SAAC,GAA4B,IAA1BD,EAAyB,EAAzBA,UAAcxI,EAAW,6BAEjD,OADavE,aAAY,SAACrF,GAAD,OAAWA,EAAMD,QAChCzB,aAGH,kBAAC,IAAD,iBAAWsL,EAAX,CAAiBH,OAAQ,SAACO,GAAD,OAAW,kBAACoI,EAAcpI,OAFjD,kBAAC,IAAD,iBAAWJ,EAAX,CAAiBH,OAAQ,SAACO,GAAD,OAAW,kBAAC,IAAD,CAAUhE,GAAG,WAgB7CsM,GAZM,kBACnB,oCACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWjK,KACjC,kBAAC,GAAD,CAAmB+J,KAAK,YAAYH,UAAWtD,KAC/C,kBAAC,GAAD,CAAgByD,KAAK,UAAUH,UAAWtD,KAC1C,kBAAC,GAAD,CAAgByD,KAAK,kBAAkBH,UAAWhB,KAClD,kBAAC,GAAD,CAAgBmB,KAAK,gBAAgBC,OAAK,EAACJ,UAAW7B,KACtD,kBAAC,GAAD,CAAgBgC,KAAK,gBAAgBH,UAAWjB,KAChD,kBAAC,IAAD,CAAOoB,KAAK,kBAAkBC,OAAK,EAACC,UAAWT,KAC/C,kBAAC,GAAD,CAAmBO,KAAK,SAASH,UAAW5C,OCOjCkD,GA1CQ,kBACrB,oCACE,yBAAKnM,UAAU,gCACb,uBAAGyB,KAAK,KAAKzB,UAAU,6BACrB,yBAAKwB,IAAI,iBAAiBxB,UAAU,eAEtC,kBAAC,IAAD,CAAcA,UAAU,oBACtB,kBAAC,IAAD,CAASiM,OAAK,EAACxM,GAAG,IAAI2M,gBAAgB,eACpC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,KAAK,YAAYrM,UAAU,SADtC,cAKF,kBAAC,IAAD,CAASP,GAAG,WAAW2M,gBAAgB,eACrC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,KAAK,OAAOrM,UAAU,SADjC,YAKF,kBAAC,IAAD,CAASP,GAAG,UAAU2M,gBAAgB,eACpC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,KAAK,QAAQrM,UAAU,SADlC,WAKF,kBAAC,IAAD,CAASP,GAAG,QAAQ2M,gBAAgB,eAClC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,KAAK,MAAMrM,UAAU,SADhC,SAKF,kBAAC,IAAD,CAASP,GAAG,OAAO2M,gBAAgB,eACjC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,KAAK,cAAcrM,UAAU,SADxC,YC/BKsM,GAFA,kBAAM,sCCaNC,GAZK,SAAC,GAAD,IAAG7Q,EAAH,EAAGA,SAAH,OAClB,oCACE,yBAAKsE,UAAU,oBACb,kBAAC,GAAD,MACA,0BAAM9F,GAAG,UAAU8F,UAAU,OAC1BtE,GAEH,kBAAC,GAAD,SCLS8Q,GAFO,kBAAM,kBAAC,GAAD,eCAtBC,GAAa,SAAC,GAA4B,IAA1BZ,EAAyB,EAAzBA,UAAcxI,EAAW,6BACvC7J,EAAOsF,aAAY,SAACrF,GAAD,OAAWA,EAAMD,QAC1C,OACE,kBAAC,IAAD,iBACM6J,EADN,CAEEH,OAAQ,SAACO,GAAD,OACNjK,EAAKzB,cAAgByB,EAAKxB,KAAKoF,QAC7B,kBAACyO,EAAcpI,GAEf,kBAAC,IAAD,CAAUhE,GAAG,gBAcRiN,GARK,WAClB,OACE,oCACE,kBAAC,GAAD,CAAYV,KAAK,mBAAmBH,UAAWW,OCjB/CG,GAAS,kBACb,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,QAGSC,GAAe,kBAC1B,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,GAAD,UCXFlJ,I,mCAAQ,CACZO,QAAS,UACTD,OAAQ,UACRE,KAAM,UACN2I,OAAQ,UACRC,KAAM,UACNC,OAAQ,YAEGC,GAAc,SAAC,GAAD,IAAGtR,EAAH,EAAGA,SAAH,OACzB,oCACE,kBAAC,IAAD,CAAegI,MAAOA,IAAQhI,KCF5BuR,GAAM,kBACV,kBAAC,GAAD,KACE,kBAAC,EAAD,KACE,kBAAC,iBAAD,CAAeC,aAAW,EAACC,mBAAoB,KAC7C,kBAAC,GAAD,UAMRC,IAASlK,OAAO,kBAAC,GAAD,MAASmK,SAASC,eAAe,W","file":"static/js/main.ba321e40.chunk.js","sourcesContent":["export const initialState = {\r\n  userLoggedIn: false,\r\n  user: {\r\n    accessToken: '',\r\n    name: '',\r\n    email: '',\r\n    posts: [],\r\n    profilePicture: '',\r\n    _id: '',\r\n  },\r\n};\r\n","export const AuthActionTypes = Object.freeze({\r\n  LOGIN_USER: '[AUTH] Logging user',\r\n  LOGOUT: '[AUTH] Logout user',\r\n  UPDATE_USER_DATA: '[AUTH] Update user data',\r\n});\r\n","export const initialState = {\r\n  isLoading: false,\r\n  hasError: false,\r\n  posts: [],\r\n};\r\n","export const PostActionTypes = Object.freeze({\r\n  FETCH_POSTS: '[POST] Fetching Posts',\r\n  LOADING: '[POST] Loading',\r\n});\r\n","export const ControlsActionTypes = Object.freeze({\r\n  ADD_LOADER: '[CONTROLS] Add loader',\r\n  REMOVE_LOADER: '[CONTROLS] remove loader',\r\n});\r\n","export const initialState = {\r\n  loaders: [],\r\n};\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport React from 'react';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport thunk from 'redux-thunk';\r\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\r\nimport PropTypes from 'prop-types';\r\nimport { AuthReducer } from './Store/Auth/auth.reducer';\r\nimport { PostReducer } from './Store/Post/post.reducer';\r\nimport { ControlsReducer } from './Store/Controls/controls.reducer';\r\n\r\nconst rootReducers = combineReducers({\r\n  auth: AuthReducer,\r\n  post: PostReducer,\r\n  controls: ControlsReducer,\r\n});\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducers);\r\n\r\nconst store = createStore(\r\n  persistedReducer,\r\n  composeWithDevTools(applyMiddleware(thunk)),\r\n);\r\n\r\nconst persistor = persistStore(store);\r\nexport const ReduxStore = ({ children }) => (\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      {children}\r\n    </PersistGate>\r\n  </Provider>\r\n);\r\n\r\nReduxStore.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import { initialState } from './auth.initialState';\r\nimport { AuthActionTypes } from './auth.types';\r\n\r\nexport const AuthReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case AuthActionTypes.LOGIN_USER:\r\n      return { user: { ...action.payload }, userLoggedIn: true };\r\n    case AuthActionTypes.LOGOUT:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { initialState } from './post.initialState';\r\nimport { PostActionTypes } from './post.types';\r\n\r\nexport const PostReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case PostActionTypes.FETCH_POSTS:\r\n      return {\r\n        ...state,\r\n        posts: action.payload,\r\n      };\r\n    case PostActionTypes.LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ControlsActionTypes } from './controls.types';\r\nimport { initialState } from './controls.initialState';\r\nexport const ControlsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ControlsActionTypes.ADD_LOADER:\r\n      const loaderIndex = state.loaders.findIndex(\r\n        (loader) => loader.id === action.payload,\r\n      );\r\n      const alreadyCreated = loaderIndex !== -1;\r\n      const newState = JSON.parse(JSON.stringify(state));\r\n      if (alreadyCreated) {\r\n        newState.loaders[loaderIndex].active = true;\r\n      } else {\r\n        newState.loaders.push({\r\n          id: action.payload,\r\n          active: true,\r\n        });\r\n      }\r\n      console.log('ControlsReducer -> newState', newState);\r\n      return newState;\r\n    case ControlsActionTypes.REMOVE_LOADER:\r\n      return {\r\n        ...state,\r\n        loaders: state.loaders.map((loader) => {\r\n          if (loader.id === action.payload) {\r\n            loader.active = false;\r\n          }\r\n\r\n          return loader;\r\n        }),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const getUserData = (token) => {\r\n  const headers = {\r\n    headers: {\r\n      Authorization: 'Bearer ' + token,\r\n    },\r\n  };\r\n  return axios\r\n    .get('/api/user', headers)\r\n    .then((res) => {\r\n      console.log('[AUTH API] Get user info');\r\n      return res.data.data;\r\n    })\r\n    .catch(() => {\r\n      throw new Error('[Auth API] Could not get user info');\r\n    });\r\n};\r\n\r\nexport const registerUser = (user) => {\r\n  const data = new FormData();\r\n  data.append('name', user.name);\r\n  data.append('email', user.email);\r\n  data.append('password', user.password);\r\n  data.append('profile_image', user.avatar);\r\n\r\n  const headers = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n    },\r\n  };\r\n  return axios\r\n    .post('/api/register', data, headers)\r\n    .then((res) => {\r\n      return {\r\n        data: res.data,\r\n        hasError: false,\r\n        errorMessage: '',\r\n      };\r\n    })\r\n    .catch((err) => {\r\n      return {\r\n        data: err.response.data,\r\n        hasError: true,\r\n        errorMessage: err.response.data.errorMessage || \"Couldn't create user.\",\r\n      };\r\n    });\r\n};\r\n","import { AuthActionTypes } from './auth.types';\r\nimport { getUserData } from '../../api/auth';\r\nexport const updateUserData = () => async (dispatch, getState) => {\r\n  const { auth } = getState();\r\n  if (auth.userLoggedIn) {\r\n    let data = null;\r\n    try {\r\n      data = await getUserData(auth.user.accessToken);\r\n    } catch {\r\n      dispatch(logout());\r\n      return;\r\n    }\r\n    if (data) {\r\n      const payload = {\r\n        name: data.name,\r\n        email: data.email,\r\n        isAdmin: data.admin,\r\n        accessToken: data.accessToken,\r\n        posts: data.posts,\r\n        profilePicture: data.profilePicture,\r\n        // eslint-disable-next-line\r\n        id: data._id,\r\n      };\r\n      dispatch(login(payload));\r\n    } else {\r\n      dispatch(logout());\r\n      return;\r\n    }\r\n  }\r\n};\r\nexport const login = (payload) => ({\r\n  type: AuthActionTypes.LOGIN_USER,\r\n  payload,\r\n});\r\nexport const logout = () => ({\r\n  type: AuthActionTypes.LOGOUT,\r\n});\r\n","import axios from 'axios';\r\nimport { PostActionTypes } from '../Store/Post/post.types';\r\nimport { login } from '../Store/Auth/auth.actions';\r\n\r\nexport const getAllPosts = () => {\r\n  return axios\r\n    .get('/api/posts')\r\n    .then((res) => {\r\n      return res.data.data;\r\n    })\r\n    .catch((err) => {\r\n      return null;\r\n    });\r\n};\r\n\r\nexport const createPost = ({ token, subject, body, tags, thumbnail }) => {\r\n  const data = new FormData();\r\n  data.append('subject', subject);\r\n  data.append('body', body);\r\n  data.append('tags', tags || []);\r\n  data.append('post_image', thumbnail);\r\n\r\n  const headers = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      Authorization: 'Bearer ' + token,\r\n    },\r\n  };\r\n  return axios\r\n    .post('/api/posts', data, headers)\r\n    .then((res) => {\r\n      console.log('[BLOG API] Created post with success.');\r\n\r\n      return { hasError: false, data: res.data.data, errorMessage: '' };\r\n    })\r\n    .catch((err) => {\r\n      return {\r\n        hasError: true,\r\n        data: err.response.data,\r\n        errorMessage: 'Could not create post.',\r\n      };\r\n    });\r\n};\r\n\r\nexport const deletePost = ({ token, postId }) => {\r\n  const headers = {\r\n    headers: {\r\n      Authorization: 'Bearer ' + token,\r\n    },\r\n  };\r\n  return axios\r\n    .delete('/api/posts/' + postId, headers)\r\n    .then((res) => {\r\n      console.log('[BLOG API] Post Removed with Success');\r\n\r\n      return {\r\n        hasError: false,\r\n        errorMessage: '',\r\n        data: res.data,\r\n      };\r\n    })\r\n    .catch((res) => {\r\n      return {\r\n        hasError: true,\r\n        errorMessage:\r\n          res?.response?.data?.errorMessage || 'Could not delete the post',\r\n        data: res.response.data,\r\n      };\r\n    });\r\n};\r\n\r\nexport const editPost = (token, id, newPost) => {\r\n  const data = new FormData();\r\n  data.append('subject', newPost.subject);\r\n  data.append('body', newPost.body);\r\n  data.append('tags', newPost.tags || '');\r\n  data.append('post_image', newPost.thumbnail);\r\n\r\n  const headers = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data',\r\n      Authorization: 'Bearer ' + token,\r\n    },\r\n  };\r\n  return axios\r\n    .put(`/api/posts/${id}`, data, headers)\r\n    .then((res) => {\r\n      console.log('[BLOG API] Created post with success.');\r\n\r\n      return { hasError: false, data: res.data.data, errorMessage: '' };\r\n    })\r\n    .catch((err) => {\r\n      return {\r\n        hasError: true,\r\n        data: err.response.data,\r\n        errorMessage:\r\n          err.response.errorMessage?.[0] ||\r\n          err.response.errorMessage ||\r\n          'Could not update post.',\r\n      };\r\n    });\r\n};\r\n","import { ControlsActionTypes } from './controls.types';\r\n\r\nexport const addLoader = (id) => ({\r\n  type: ControlsActionTypes.ADD_LOADER,\r\n  payload: id,\r\n});\r\n\r\nexport const removeLoader = (id) => ({\r\n  type: ControlsActionTypes.REMOVE_LOADER,\r\n  payload: id,\r\n});\r\n","import axios from 'axios';\r\nimport { PostActionTypes } from './post.types';\r\nimport { getAllPosts } from '../../api/blog';\r\nimport { removeLoader, addLoader } from '../Controls/controls.actions';\r\n\r\nconst setLoading = (bool) => ({\r\n  type: PostActionTypes.LOADING,\r\n  payload: bool,\r\n});\r\nexport const fetchPosts = () => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n\r\n  dispatch(addLoader('GET_ALL_POSTS'));\r\n  const data = await getAllPosts();\r\n  dispatch(removeLoader('GET_ALL_POSTS'));\r\n\r\n  if (data) {\r\n    dispatch({\r\n      type: PostActionTypes.FETCH_POSTS,\r\n      payload: data,\r\n    });\r\n  } else {\r\n    throw new Error('Couldnt reach the posts');\r\n  }\r\n};\r\n","export const getRandomsFromArray = (array, num) => {\r\n  const result = [];\r\n  if (!Array.isArray(array)) {\r\n    throw new Error('First parameter is not an array');\r\n  }\r\n  if (!num) {\r\n    throw new Error('Invalid parameter {num}');\r\n  }\r\n  if (num > array.length) {\r\n    throw new Error('Cannot get more items than the length of the array');\r\n  }\r\n\r\n  const usedIndexes = [];\r\n  while (num--) {\r\n    let index;\r\n    while (1) {\r\n      index = Math.floor(Math.random() * array.length);\r\n      if (!usedIndexes.find((n) => n === index)) {\r\n        usedIndexes.push(index);\r\n        break;\r\n      }\r\n    }\r\n\r\n    result.push(array[index]);\r\n  }\r\n\r\n  return result;\r\n};\r\nexport const getDaysSince = (date) => {\r\n  // The number of milliseconds in one day\r\n  const ONE_DAY = 1000 * 60 * 60 * 24;\r\n\r\n  // Calculate the difference in milliseconds\r\n  const differenceMs = Math.abs(new Date() - new Date(date));\r\n\r\n  // Convert back to days and return\r\n  return Math.round(differenceMs / ONE_DAY);\r\n};\r\n","import React, { useState, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  MDBCollapse,\r\n  MDBContainer,\r\n  MDBDropdown,\r\n  MDBDropdownItem,\r\n  MDBDropdownMenu,\r\n  MDBDropdownToggle,\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavbarNav,\r\n  MDBNavItem,\r\n  MDBHamburgerToggler,\r\n  MDBNavLink,\r\n} from 'mdbreact';\r\nimport { logout } from '../../Store/Auth/auth.actions';\r\n\r\nexport const Navbar = () => {\r\n  const auth = useSelector((store) => store.auth);\r\n  const dispatch = useDispatch();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const logoutUser = useCallback(() => {\r\n    dispatch(logout());\r\n  }, [dispatch]);\r\n  return (\r\n    <MDBNavbar color=\"white lighten-4\" light>\r\n      <MDBContainer>\r\n        <MDBNavbarBrand style={{ color: 'black' }}>\r\n          <MDBNavLink style={{ margin: '0' }} to=\"/\">\r\n            FullStack Blog\r\n          </MDBNavLink>\r\n        </MDBNavbarBrand>\r\n        <MDBHamburgerToggler\r\n          color=\"#2196f3\"\r\n          style={{ margin: 0 }}\r\n          id=\"hamburger1\"\r\n          onClick={() => setIsOpen(!isOpen)}\r\n        />\r\n        <MDBCollapse isOpen={isOpen} navbar>\r\n          <MDBNavbarNav left>\r\n            {auth.userLoggedIn ? (\r\n              <>\r\n                <MDBNavItem style={{ listStyle: 'none' }}>\r\n                  <MDBNavLink to=\"/posts/create\">Create Post</MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem style={{ listStyle: 'none' }}>\r\n                  <MDBNavLink to=\"/posts/manage\">Manage Posts</MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem style={{ listStyle: 'none' }}>\r\n                  <MDBDropdown>\r\n                    <MDBDropdownToggle nav caret>\r\n                      <span className=\"mr-2\">{auth.user.name}</span>\r\n                    </MDBDropdownToggle>\r\n                    <MDBDropdownMenu className=\"dropdown-default\">\r\n                      <MDBDropdownItem>\r\n                        <MDBNavLink to=\"/manage\">Your Profile</MDBNavLink>\r\n                      </MDBDropdownItem>\r\n                      <MDBDropdownItem>\r\n                        <MDBNavLink\r\n                          to=\"\"\r\n                          onClick={() => {\r\n                            logoutUser();\r\n                          }}\r\n                        >\r\n                          Logout\r\n                        </MDBNavLink>\r\n                      </MDBDropdownItem>\r\n                    </MDBDropdownMenu>\r\n                  </MDBDropdown>\r\n                </MDBNavItem>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <MDBNavItem style={{ listStyle: 'none' }}>\r\n                  <MDBNavLink to=\"/login\">Login</MDBNavLink>\r\n                </MDBNavItem>\r\n                <MDBNavItem style={{ listStyle: 'none' }}>\r\n                  <MDBNavLink to=\"/register\">Sign in</MDBNavLink>\r\n                </MDBNavItem>\r\n              </>\r\n            )}\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBContainer>\r\n    </MDBNavbar>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Spinner from 'react-loader-spinner';\r\n\r\nconst Loader = () => {\r\n  const { loaders } = useSelector((store) => store.controls);\r\n  const isActive = loaders.some((loader) => loader.active);\r\n  return isActive ? (\r\n    <Modal>\r\n      <Flex>\r\n        <Spinner type=\"Bars\" color=\"#000\" height={250} width={250} />\r\n        <h3>Loading...</h3>\r\n      </Flex>\r\n    </Modal>\r\n  ) : null;\r\n};\r\n\r\nexport default Loader;\r\n\r\nconst Modal = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  /* background: rgba(255, 255, 255, 0.5); */\r\n  z-index: 999;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n`;\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100%;\r\n  align-items: center;\r\n  h3 {\r\n    margin: 10px auto;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { MDBContainer } from 'mdbreact';\r\nimport { Navbar } from '../navbar/navbar.component';\r\nimport Loader from '../Loader/loader.component';\r\n\r\nexport const BlogLayoutComponent = ({ children }) => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <MDBContainer>\r\n        <Loader />\r\n        {children}\r\n      </MDBContainer>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { MDBCard, MDBCardBody } from 'mdbreact';\r\nconst CardWrapperComponent = ({ children }) => {\r\n  return (\r\n    <MDBCard className=\"my-5 px-5 pb-5\">\r\n      <MDBCardBody>{children}</MDBCardBody>\r\n    </MDBCard>\r\n  );\r\n};\r\n\r\nexport default CardWrapperComponent;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CardWrapperHeaderComponent = ({title, message}) => {\r\n    return (\r\n        <>\r\n            <h2 className=\"h1-responsive font-weight-bold text-center my-5\">\r\n                {title}\r\n            </h2>\r\n            {message && <p>{message}</p>}\r\n        </>\r\n    );\r\n};\r\nCardWrapperHeaderComponent.defaultProps = {\r\n    message: \"\"\r\n};\r\nCardWrapperHeaderComponent.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    message: PropTypes.string\r\n};\r\n\r\nexport default CardWrapperHeaderComponent;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { MDBRow, MDBCol, MDBMask, MDBIcon, MDBView, MDBBtn } from 'mdbreact';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getDaysSince } from '../../helpers/helpers';\r\nconst BlogPageBodyComponent = () => {\r\n  const { posts } = useSelector((state) => state.post);\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      {posts.map((post) => (\r\n        <>\r\n          <MDBRow>\r\n            <MDBCol lg=\"5\">\r\n              <MDBView className=\"rounded z-depth-2 mb-lg-0 mb-4\" hover waves>\r\n                <img\r\n                  className=\"img-fluid\"\r\n                  src={\r\n                    post.postImage\r\n                      ? `${\r\n                          process.env.NODE_ENV === 'development'\r\n                            ? `http://localhost:4000/`\r\n                            : '/'\r\n                        }${post.postImage.replace(/\\\\/g, '/')}`\r\n                      : 'https://mdbootstrap.com/img/Photos/Others/img%20(27).jpg'\r\n                  }\r\n                  alt=\"\"\r\n                />\r\n                <a href=\"#!\">\r\n                  <MDBMask overlay=\"white-slight\" />\r\n                </a>\r\n              </MDBView>\r\n            </MDBCol>\r\n            <MDBCol lg=\"7\">\r\n              {post.tags.map((tag, index) => {\r\n                return (\r\n                  <a href=\"#!\" className=\"green-text\">\r\n                    <h6 className=\"font-weight-bold mb-3 d-inline\">\r\n                      {tag.name.replace(/\"/g, '')}\r\n                      {index + 1 !== post.tags.length && ', '}\r\n                    </h6>\r\n                  </a>\r\n                );\r\n              })}\r\n              <h2 className=\"font-weight-bold mb-3 p-0\">\r\n                <strong>{post.subject}</strong>\r\n              </h2>\r\n              <p>\r\n                by\r\n                <a href=\"#!\">\r\n                  <strong> {post.author.name}</strong>\r\n                </a>\r\n                , {`${getDaysSince(post.created_at)}`} days\r\n              </p>\r\n              <MDBBtn\r\n                color=\"success\"\r\n                size=\"md\"\r\n                className=\"waves-light\"\r\n                onClick={() => {\r\n                  history.push('/posts/show/' + post._id);\r\n                }}\r\n              >\r\n                Read more\r\n              </MDBBtn>\r\n            </MDBCol>\r\n          </MDBRow>\r\n          <hr className=\"my-5\" />\r\n        </>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BlogPageBodyComponent;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchPosts } from '../../Store/Post/post.actions';\r\nimport { getRandomsFromArray } from '../../helpers/helpers';\r\nimport { BlogLayoutComponent } from '../../Components/BlogLayout/blog-layout.component';\r\n\r\nimport CardWrapperComponent from '../../Components/CardWrapper/card-wrapper.component';\r\nimport CardWrapperHeaderComponent from '../../Components/CardWrapperHeader/card-wrapper-header.component';\r\nimport BlogPageBodyComponent from '../../Components/BlogPageBody/blog-page-body.component';\r\nimport { updateUserData } from '../../Store/Auth/auth.actions';\r\n\r\nexport const HomePage = () => {\r\n  const dispatch = useDispatch();\r\n  const { posts, isLoading } = useSelector((state) => state.post);\r\n  useEffect(() => {\r\n    dispatch(fetchPosts());\r\n    dispatch(updateUserData());\r\n    const getPostsInterval = setInterval(() => {\r\n      dispatch(fetchPosts());\r\n    }, 30000);\r\n\r\n    return () => {\r\n      clearInterval(getPostsInterval);\r\n    };\r\n  }, [dispatch]);\r\n  return (\r\n    <BlogLayoutComponent>\r\n      <CardWrapperComponent>\r\n        <CardWrapperHeaderComponent title={'List of Posts'} />\r\n        <BlogPageBodyComponent />\r\n      </CardWrapperComponent>\r\n    </BlogLayoutComponent>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FormWrapper = ({ children }) => <Wrapper>{children}</Wrapper>;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 60%;\r\n  margin: 1em auto;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n  @media screen and (min-width: 768px) and (max-width: 1366px) {\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nFormWrapper.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\nexport { FormWrapper };\r\n","import * as Yup from 'yup';\r\n\r\nexport const validationSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email('Email not valid.')\r\n    .required('Email is required!'),\r\n  name: Yup.string().required('Name is required!'),\r\n  password: Yup.string()\r\n    .min(6, 'Password has to be longer than 6 characters!')\r\n    .required('Password is required!'),\r\n  confirmPassword: Yup.string()\r\n    .required()\r\n    .oneOf([Yup.ref('password')], \"Passwords don't match\"),\r\n});\r\nexport const initialValues = {\r\n  email: '',\r\n  name: '',\r\n  password: '',\r\n  confirmPassword: '',\r\n  avatar: null,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 80%;\r\n  margin: 0 auto;\r\n`;\r\nexport const WrapperSubmitButton = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin: 2rem auto;\r\n`;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const Button = ({\r\n  type,\r\n  onClick,\r\n  disabled,\r\n  children,\r\n  size,\r\n  backgroundColor,\r\n  ...rest\r\n}) => {\r\n  let render;\r\n\r\n  switch (type) {\r\n    case 'anchor':\r\n      render = (\r\n        <StyledAnchor\r\n          onClick={onClick}\r\n          disabled={disabled}\r\n          size={size}\r\n          backgroundColor={backgroundColor}\r\n          {...rest}\r\n        >\r\n          {children}\r\n        </StyledAnchor>\r\n      );\r\n      break;\r\n    case 'button':\r\n      render = (\r\n        <StyledButton\r\n          onClick={onClick}\r\n          disabled={disabled}\r\n          size={size}\r\n          backgroundColor={backgroundColor}\r\n          {...rest}\r\n        >\r\n          {children}\r\n        </StyledButton>\r\n      );\r\n      break;\r\n    default:\r\n      render = (\r\n        <StyledButton\r\n          onClick={onClick}\r\n          disabled={disabled}\r\n          size={size}\r\n          backgroundColor={backgroundColor}\r\n          {...rest}\r\n        >\r\n          {children}\r\n        </StyledButton>\r\n      );\r\n  }\r\n  return render;\r\n};\r\nconst StyledAnchor = styled.button`\r\n  display: block;\r\n  padding: ${(props) => (props.size === 'big' ? '.5rem 2rem' : '.5rem 1.5rem')};\r\n  color: white;\r\n  background: ${(props) => props.theme[props.backgroundColor]};\r\n  outline: none;\r\n  cursor: pointer;\r\n  border-radius: 2px;\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  border: 2px solid ${(props) => props.theme[props.backgroundColor]};\r\n  text-transform: uppercase;\r\n\r\n  &:hover {\r\n    background: white;\r\n    transition: 0.2s;\r\n    border-color: ${(props) => props.theme[props.backgroundColor]};\r\n    color: ${(props) => props.theme[props.backgroundColor]};\r\n  }\r\n  &:disabled {\r\n    opacity: 60%;\r\n    &:hover {\r\n      background: ${(props) => props.theme[props.backgroundColor]};\r\n      transition: none;\r\n      border: 2px solid ${(props) => props.theme[props.backgroundColor]};\r\n      color: white;\r\n      cursor: unset;\r\n    }\r\n  }\r\n`;\r\nconst StyledButton = styled.button`\r\n  display: block;\r\n  padding: ${(props) => (props.size === 'big' ? '.5rem 2rem' : '.5rem 1.5rem')};\r\n  color: white;\r\n  background: ${(props) => props.theme[props.backgroundColor]};\r\n  outline: none;\r\n  cursor: pointer;\r\n  border-radius: 2px;\r\n  font-size: 18px;\r\n  font-weight: 400;\r\n  border: 2px solid ${(props) => props.theme[props.backgroundColor]};\r\n  text-transform: uppercase;\r\n\r\n  &:hover {\r\n    background: white;\r\n    transition: 0.2s;\r\n    border-color: ${(props) => props.theme[props.backgroundColor]};\r\n    color: ${(props) => props.theme[props.backgroundColor]};\r\n  }\r\n  &:disabled {\r\n    opacity: 60%;\r\n    &:hover {\r\n      background: ${(props) => props.theme[props.backgroundColor]};\r\n      transition: none;\r\n      border: 2px solid ${(props) => props.theme[props.backgroundColor]};\r\n      color: white;\r\n      cursor: unset;\r\n    }\r\n  }\r\n`;\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\nconst fadeIn = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n`;\r\nexport const InputWrapper = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  border-bottom: 1.48px solid\r\n    ${(props) =>\r\n      props.touched\r\n        ? props.error\r\n          ? props.theme.danger\r\n          : props.theme.success\r\n        : props.theme.dark};\r\n`;\r\nexport const InputInfo = styled.div`\r\n  width: 40px;\r\n  display: flex;\r\n  justify-content: center;\r\n  background: #c1bebe6b;\r\n  align-items: center;\r\n  color: ${(props) =>\r\n    props.touched\r\n      ? props.error\r\n        ? props.theme.danger\r\n        : props.theme.success\r\n      : props.theme.dark};\r\n`;\r\nexport const Icon = styled.div`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  color: ${(props) => (props.error ? props.theme.danger : props.theme.success)};\r\n`;\r\nexport const ErrorMessage = styled.p`\r\n  color: ${(props) => props.theme.danger};\r\n  margin-top: 5px;\r\n  animation: 1s ${fadeIn} ease-out;\r\n`;\r\nexport const InputGroup = styled.div`\r\n  width: 100%;\r\n  margin: 1em 0;\r\n`;\r\nexport const InputLabel = styled.label`\r\n  display: block;\r\n  color: ${(props) =>\r\n    props.touched\r\n      ? props.error\r\n        ? props.theme.danger\r\n        : props.theme.success\r\n      : props.theme.dark};\r\n  font-size: 1.1em;\r\n  width: 100%;\r\n`;\r\nexport const InputField = styled.input`\r\n  display: block;\r\n  opacity: ${(props) => props.opacity || '100'};\r\n  width: 100%;\r\n  border: none;\r\n  outline: none;\r\n  padding: 0.4rem;\r\n  font-size: 1.1em;\r\n`;\r\n","import React from 'react';\r\nimport uuid from 'uuid';\r\nimport { FaCheck } from 'react-icons/fa';\r\nimport { MdClose } from 'react-icons/md';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  ErrorMessage,\r\n  Icon,\r\n  InputField,\r\n  InputGroup,\r\n  InputInfo,\r\n  InputLabel,\r\n  InputWrapper,\r\n} from './macro.styles';\r\n\r\nconst InputText = ({\r\n  resetField,\r\n  touched,\r\n  PrefixIcon,\r\n  name,\r\n  minLength,\r\n  maxLength,\r\n  type,\r\n  label,\r\n  onChange,\r\n  value,\r\n  error,\r\n  errorMessage,\r\n  regex,\r\n  onBlur,\r\n  displayErrorWhenImTrue,\r\n  placeholder,\r\n  ...rest\r\n}) => {\r\n  const id = uuid();\r\n  return (\r\n    <InputGroup>\r\n      <InputLabel error={error} touched={touched} htmlFor={id}>\r\n        {label}\r\n      </InputLabel>\r\n      <InputWrapper error={error} touched={touched}>\r\n        {PrefixIcon && (\r\n          <InputInfo error={error} touched={touched}>\r\n            <PrefixIcon />\r\n          </InputInfo>\r\n        )}\r\n\r\n        <InputField\r\n          placeholder={placeholder}\r\n          value={value}\r\n          name={name}\r\n          id={id}\r\n          type={type}\r\n          {...rest}\r\n          onBlur={onBlur}\r\n          onChange={onChange}\r\n        />\r\n        <Icon error={error && touched}>\r\n          {!error && touched && <FaCheck />}\r\n          {error && touched && <MdClose onClick={resetField} />}\r\n        </Icon>\r\n      </InputWrapper>\r\n      {error && touched && !displayErrorWhenImTrue && (\r\n        <ErrorMessage>{errorMessage}</ErrorMessage>\r\n      )}\r\n      {displayErrorWhenImTrue && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </InputGroup>\r\n  );\r\n};\r\n\r\nInputText.defaultProps = {\r\n  resetField: () => {},\r\n  PrefixIcon: null,\r\n  minLength: 0,\r\n  maxLength: undefined,\r\n  type: 'text',\r\n  label: '',\r\n  error: false,\r\n  errorMessage: '',\r\n  regex: '',\r\n  onBlur: () => {},\r\n  displayErrorWhenImTrue: false,\r\n  placeholder: '',\r\n  touched: false,\r\n};\r\n\r\nInputText.propTypes = {\r\n  resetField: PropTypes.func,\r\n  touched: PropTypes.bool,\r\n  PrefixIcon: PropTypes.elementType,\r\n  name: PropTypes.string.isRequired,\r\n  minLength: PropTypes.number,\r\n  maxLength: PropTypes.number,\r\n  type: PropTypes.string,\r\n  label: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  error: PropTypes.bool,\r\n  errorMessage: PropTypes.string,\r\n  regex: PropTypes.string,\r\n  onBlur: PropTypes.func,\r\n  displayErrorWhenImTrue: PropTypes.bool,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nexport { InputText };\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { MdFileUpload, MdClose } from 'react-icons/md';\r\nimport uuid from 'uuid';\r\nimport { FaCheck } from 'react-icons/fa';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  ErrorMessage,\r\n  Icon,\r\n  InputField,\r\n  InputGroup,\r\n  InputInfo,\r\n  InputLabel,\r\n  InputWrapper,\r\n} from './macro.styles';\r\n\r\nconst FileInput = ({\r\n  label,\r\n  placeholder,\r\n  value,\r\n  displayErrorWhenImTrue,\r\n  onChange,\r\n  ...rest\r\n}) => {\r\n  const PrefixIcon = MdFileUpload;\r\n  const [error, setError] = useState(false);\r\n  const [touched, setTouched] = useState(false);\r\n\r\n  const [imagePreviewError, setImagePreviewError] = useState(false);\r\n  const [imagePreview, setImagePreview] = useState('');\r\n\r\n  const [id, setId] = useState();\r\n\r\n  useEffect(() => {\r\n    setId(uuid());\r\n  }, []);\r\n  const onChangeFile = (e) => {\r\n    if (e) {\r\n      e.preventDefault();\r\n\r\n      const reader = new FileReader();\r\n      const file = e.target.files[0];\r\n      if (file) {\r\n        reader.onloadend = () => {\r\n          const imgPreview = reader.result;\r\n          if (!imgPreview) {\r\n            setImagePreviewError(true);\r\n          } else {\r\n            setImagePreviewError(false);\r\n          }\r\n          setImagePreview(imgPreview);\r\n          onChange(file, true);\r\n          setTouched(true);\r\n          setError(false);\r\n        };\r\n      } else {\r\n        setError(true);\r\n      }\r\n\r\n      reader.readAsDataURL(file);\r\n    } else {\r\n      onChange(null, false);\r\n    }\r\n  };\r\n  return (\r\n    <ImagePreviewWrapper>\r\n      <ImagePreviewImg src={imagePreview} />\r\n      <InputGroup>\r\n        <InputLabel error={error} touched={touched} htmlFor={id}>\r\n          {label}\r\n        </InputLabel>\r\n        <InputWrapper error={error} touched={touched}>\r\n          {PrefixIcon && (\r\n            <InputInfo error={error} touched={touched}>\r\n              <PrefixIcon />\r\n            </InputInfo>\r\n          )}\r\n          <WrapperInputField text={value && value.name}>\r\n            <InputField\r\n              opacity=\"0\"\r\n              placeholder={placeholder}\r\n              id={id}\r\n              onChange={onChangeFile}\r\n              type=\"file\"\r\n              {...rest}\r\n            />\r\n          </WrapperInputField>\r\n          <Icon error={error && touched}>\r\n            {!error && touched && <FaCheck />}\r\n            {error && touched && <MdClose onClick={() => onChangeFile()} />}\r\n          </Icon>\r\n        </InputWrapper>\r\n        {error && touched && !displayErrorWhenImTrue && (\r\n          <ErrorMessage>Something went wrong with the upload</ErrorMessage>\r\n        )}\r\n        {imagePreviewError && touched && (\r\n          <ErrorMessage>No Image Preview could be loaded</ErrorMessage>\r\n        )}\r\n        {displayErrorWhenImTrue && (\r\n          <ErrorMessage>No Image Preview could be loaded</ErrorMessage>\r\n        )}\r\n      </InputGroup>\r\n    </ImagePreviewWrapper>\r\n  );\r\n};\r\nconst ImagePreviewImg = styled.img`\r\n  max-width: 120px;\r\n  height: 120px;\r\n`;\r\nconst ImagePreviewWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nconst WrapperInputField = styled.div`\r\n  width: 100%;\r\n  background-color: white;\r\n  \r\n  &:before {\r\n    content: \"${(props) => props.text || ''}\";\r\n    color: black;\r\n    position: absolute;\r\n    top: 5px;\r\n  }\r\n`;\r\nFileInput.defaultProps = {\r\n  label: '',\r\n  placeholder: '',\r\n  displayErrorWhenImTrue: false,\r\n  value: null,\r\n};\r\nFileInput.propTypes = {\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string,\r\n  displayErrorWhenImTrue: PropTypes.bool,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport { FileInput };\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FaCog, MdContacts, MdEmail } from 'react-icons/all';\r\nimport { InputText } from '../MacroControllers/input-text.component';\r\nimport { FileInput } from '../MacroControllers/file-input.component';\r\n\r\nconst RegisterFields = ({\r\n  errors,\r\n  touched,\r\n  values,\r\n  handleChange,\r\n  handleBlur,\r\n  setFieldValue,\r\n}) => (\r\n  <>\r\n    <InputText\r\n      PrefixIcon={MdContacts}\r\n      errorMessage={errors.name}\r\n      error={Boolean(errors.name)}\r\n      touched={touched.name}\r\n      label=\"Your Name\"\r\n      resetField={() => setFieldValue('name', '')}\r\n      value={values.name}\r\n      name=\"name\"\r\n      onChange={handleChange}\r\n      onBlur={handleBlur}\r\n    />\r\n    <InputText\r\n      PrefixIcon={MdEmail}\r\n      errorMessage={errors.email}\r\n      error={Boolean(errors.email)}\r\n      touched={touched.email}\r\n      label=\"Your Email\"\r\n      resetField={() => setFieldValue('email', '')}\r\n      value={values.email}\r\n      name=\"email\"\r\n      onChange={handleChange}\r\n      onBlur={handleBlur}\r\n    />\r\n    <InputText\r\n      PrefixIcon={FaCog}\r\n      type=\"password\"\r\n      errorMessage={errors.password}\r\n      resetField={() => setFieldValue('password', '')}\r\n      error={Boolean(errors.password)}\r\n      touched={touched.password}\r\n      label=\"Your password\"\r\n      value={values.password}\r\n      name=\"password\"\r\n      onChange={handleChange}\r\n      onBlur={handleBlur}\r\n    />\r\n    <InputText\r\n      PrefixIcon={FaCog}\r\n      type=\"password\"\r\n      errorMessage={errors.confirmPassword}\r\n      error={Boolean(errors.confirmPassword)}\r\n      resetField={() => setFieldValue('confirmPassword', '')}\r\n      touched={touched.confirmPassword}\r\n      label=\"Confirm Password\"\r\n      value={values.confirmPassword}\r\n      name=\"confirmPassword\"\r\n      onChange={handleChange}\r\n      onBlur={handleBlur}\r\n    />\r\n    <FileInput\r\n      onChange={(file) => setFieldValue('avatar', file)}\r\n      value={values.avatar}\r\n    />\r\n  </>\r\n);\r\nRegisterFields.defaultProps = {\r\n  errors: {},\r\n  touched: {},\r\n};\r\nRegisterFields.propTypes = {\r\n  errors: PropTypes.object,\r\n  values: PropTypes.object.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  setFieldValue: PropTypes.func.isRequired,\r\n  handleBlur: PropTypes.func.isRequired,\r\n  touched: PropTypes.object,\r\n};\r\nexport default RegisterFields;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { WrapperSubmitButton } from '../../global.styles';\r\nimport { Button } from '../MacroControllers/button.component';\r\nimport RegisterFields from './register-field.component';\r\nimport { MDBAlert } from 'mdbreact';\r\n\r\nconst RegisterForm = ({\r\n  errors,\r\n  values,\r\n  handleChange,\r\n  setFieldValue,\r\n  handleBlur,\r\n  touched,\r\n  isSubmitting,\r\n  isValid,\r\n  handleSubmit,\r\n  serverError,\r\n}) => {\r\n  const [error, setError] = useState(serverError);\r\n  useEffect(() => {\r\n    setError(serverError);\r\n  }, [serverError]);\r\n  return (\r\n    <>\r\n      {error && (\r\n        <MDBAlert\r\n          color=\"danger\"\r\n          dismiss\r\n          onClose={() => {\r\n            setError('');\r\n          }}\r\n        >\r\n          {error}\r\n        </MDBAlert>\r\n      )}\r\n      <form onSubmit={handleSubmit}>\r\n        <RegisterFields\r\n          errors={errors}\r\n          values={values}\r\n          handleChange={handleChange}\r\n          setFieldValue={setFieldValue}\r\n          handleBlur={handleBlur}\r\n          touched={touched}\r\n        />\r\n        <WrapperSubmitButton>\r\n          <Button\r\n            backgroundColor={isValid ? 'success' : 'danger'}\r\n            disabled={!isValid || isSubmitting}\r\n          >\r\n            Register\r\n          </Button>\r\n        </WrapperSubmitButton>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nRegisterForm.defaultProps = {\r\n  serverError: '',\r\n};\r\nRegisterForm.propTypes = {\r\n  errors: PropTypes.object.isRequired,\r\n  values: PropTypes.object.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  setFieldValue: PropTypes.func.isRequired,\r\n  handleBlur: PropTypes.func.isRequired,\r\n  touched: PropTypes.object.isRequired,\r\n  isSubmitting: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  isValid: PropTypes.bool.isRequired,\r\n  serverError: PropTypes.string,\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useFormik } from 'formik';\r\nimport { FormWrapper } from '../../Components/MacroControllers/form-wrapper.component';\r\nimport { initialValues, validationSchema } from './register.config';\r\nimport { login } from '../../Store/Auth/auth.actions';\r\nimport RegisterForm from '../../Components/RegisterForm/register-form.component';\r\nimport { BlogLayoutComponent } from '../../Components/BlogLayout/blog-layout.component';\r\nimport CardWrapperComponent from '../../Components/CardWrapper/card-wrapper.component';\r\nimport CardWrapperHeaderComponent from '../../Components/CardWrapperHeader/card-wrapper-header.component';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { registerUser } from '../../api/auth';\r\nimport { addLoader, removeLoader } from '../../Store/Controls/controls.actions';\r\n\r\nconst RegisterPage = () => {\r\n  const dispatch = useDispatch();\r\n  const [serverError, setServerError] = useState('');\r\n  const { addToast } = useToasts();\r\n\r\n  const onSubmit = async (values, { setSubmitting }) => {\r\n    setSubmitting(true);\r\n    dispatch(addLoader('REGISTER_USER_LOADER'));\r\n    const { hasError, data, errorMessage } = await registerUser(values);\r\n    dispatch(removeLoader('REGISTER_USER_LOADER'));\r\n\r\n    setSubmitting(false);\r\n    if (hasError) {\r\n      addToast('Could not create user.', { appearance: 'error' });\r\n      setServerError(errorMessage);\r\n      return;\r\n    }\r\n\r\n    const payload = {\r\n      name: data.user.name,\r\n      email: data.user.email,\r\n      accessToken: data.user.accessToken,\r\n      posts: data.user.posts,\r\n      profilePicture: data.user.profilePicture,\r\n      // eslint-disable-next-line\r\n      id: data.user._id,\r\n    };\r\n    setServerError('');\r\n\r\n    addToast('Login Successfully', { appearance: 'success' });\r\n    addToast(`You're being redirected...`, { appearance: 'info' });\r\n    dispatch(login(payload));\r\n  };\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit,\r\n  });\r\n  return (\r\n    <BlogLayoutComponent>\r\n      <CardWrapperComponent>\r\n        <CardWrapperHeaderComponent title=\"Register\" />\r\n        <FormWrapper>\r\n          <RegisterForm {...formik} serverError={serverError} />\r\n        </FormWrapper>\r\n      </CardWrapperComponent>\r\n    </BlogLayoutComponent>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React from 'react';\r\nimport { FaCog, MdEmail } from 'react-icons/all';\r\nimport PropTypes from 'prop-types';\r\nimport { InputText } from '../MacroControllers/input-text.component';\r\n\r\nconst LoginFieldsComponent = ({\r\n  errors,\r\n  touched,\r\n  values,\r\n  handleChange,\r\n  handleBlur,\r\n  setFieldValue,\r\n}) => (\r\n  <>\r\n    <InputText\r\n      PrefixIcon={MdEmail}\r\n      errorMessage={errors.email}\r\n      error={Boolean(errors.email)}\r\n      touched={touched.email}\r\n      label=\"Your Email\"\r\n      value={values.email}\r\n      name=\"email\"\r\n      resetField={() => setFieldValue('email', '')}\r\n      onChange={handleChange}\r\n      onBlur={handleBlur}\r\n    />\r\n    <InputText\r\n      PrefixIcon={FaCog}\r\n      type=\"password\"\r\n      errorMessage={errors.password}\r\n      error={Boolean(errors.password)}\r\n      resetField={() => setFieldValue('password', '')}\r\n      touched={touched.password}\r\n      label=\"Your password\"\r\n      value={values.password}\r\n      name=\"password\"\r\n      onChange={handleChange}\r\n      onBlur={handleBlur}\r\n    />\r\n  </>\r\n);\r\nLoginFieldsComponent.defaultProps = {\r\n  errors: {},\r\n  touched: {},\r\n};\r\nLoginFieldsComponent.propTypes = {\r\n  errors: PropTypes.object,\r\n  values: PropTypes.object.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  setFieldValue: PropTypes.func.isRequired,\r\n  handleBlur: PropTypes.func.isRequired,\r\n  touched: PropTypes.object,\r\n};\r\nexport default LoginFieldsComponent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ErrorMessage } from '../MacroControllers/macro.styles';\r\nimport { WrapperSubmitButton } from '../../global.styles';\r\nimport { Button } from '../MacroControllers/button.component';\r\nimport LoginFieldsComponent from './login-fields.component';\r\nimport { MDBAlert } from 'mdbreact';\r\n\r\nconst LoginFormComponent = ({\r\n  errors,\r\n  values,\r\n  handleChange,\r\n  setFieldValue,\r\n  handleBlur,\r\n  touched,\r\n  isSubmitting,\r\n  isValid,\r\n  handleSubmit,\r\n  serverError,\r\n}) => {\r\n  const [error, setError] = useState(serverError);\r\n  useEffect(() => {\r\n    setError(serverError);\r\n  }, [serverError]);\r\n  return (\r\n    <>\r\n      {error && (\r\n        <MDBAlert\r\n          color=\"danger\"\r\n          dismiss\r\n          onClose={() => {\r\n            setError('');\r\n          }}\r\n        >\r\n          {error}\r\n        </MDBAlert>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <LoginFieldsComponent\r\n          errors={errors}\r\n          values={values}\r\n          handleChange={handleChange}\r\n          setFieldValue={setFieldValue}\r\n          handleBlur={handleBlur}\r\n          touched={touched}\r\n        />\r\n        <WrapperSubmitButton>\r\n          <Button\r\n            backgroundColor={isValid ? 'success' : 'danger'}\r\n            disabled={!isValid || isSubmitting}\r\n          >\r\n            Login\r\n          </Button>\r\n        </WrapperSubmitButton>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nLoginFormComponent.propTypes = {\r\n  errors: PropTypes.object.isRequired,\r\n  values: PropTypes.object.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  setFieldValue: PropTypes.func.isRequired,\r\n  handleBlur: PropTypes.func.isRequired,\r\n  touched: PropTypes.object.isRequired,\r\n  isSubmitting: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  isValid: PropTypes.bool.isRequired,\r\n  serverError: PropTypes.string.isRequired,\r\n};\r\nexport default LoginFormComponent;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport { FormWrapper } from '../../Components/MacroControllers/form-wrapper.component';\r\nimport LoginFormComponent from '../../Components/LoginForm/login-form.component';\r\nimport { login } from '../../Store/Auth/auth.actions';\r\nimport { BlogLayoutComponent } from '../../Components/BlogLayout/blog-layout.component';\r\nimport CardWrapperComponent from '../../Components/CardWrapper/card-wrapper.component';\r\nimport CardWrapperHeaderComponent from '../../Components/CardWrapperHeader/card-wrapper-header.component';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { addLoader, removeLoader } from '../../Store/Controls/controls.actions';\r\nconst LoginPage = () => {\r\n  const [serverError, setServerError] = useState('');\r\n  const dispatch = useDispatch();\r\n  const { addToast } = useToasts();\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email('Email not valid.')\r\n      .required('Email is required!'),\r\n    password: Yup.string()\r\n      .min(6, 'Password has to be longer than 6 characters!')\r\n      .required('Password is required!'),\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values, { setSubmitting }) => {\r\n      setSubmitting(true);\r\n      dispatch(addLoader('LOGIN'));\r\n      axios\r\n        .post('/api/login', {\r\n          email: values.email,\r\n          password: values.password,\r\n        })\r\n        .then((res) => {\r\n          setSubmitting(false);\r\n          if (res.data.code === 200) {\r\n            dispatch(removeLoader('LOGIN'));\r\n\r\n            const payload = {\r\n              name: res.data.user.name,\r\n              email: res.data.user.email,\r\n              isAdmin: res.data.user.admin,\r\n              accessToken: res.data.user.accessToken,\r\n              posts: res.data.user.posts,\r\n              profilePicture: res.data.user.profilePicture,\r\n              // eslint-disable-next-line\r\n              id: res.data.user._id,\r\n            };\r\n            dispatch(login(payload));\r\n            addToast('Login Successfully', { appearance: 'success' });\r\n            addToast(`You're being redirected...`, { appearance: 'info' });\r\n            setServerError('');\r\n          } else {\r\n            dispatch(removeLoader('LOGIN'));\r\n            setServerError(res.data.errorMessage);\r\n          }\r\n          console.log(res);\r\n        })\r\n        .catch(() => {\r\n          setServerError('Something bad happen. :(');\r\n          dispatch(removeLoader('LOGIN'));\r\n\r\n          setSubmitting(false);\r\n        });\r\n    },\r\n  });\r\n  return (\r\n    <BlogLayoutComponent>\r\n      <CardWrapperComponent>\r\n        <CardWrapperHeaderComponent title=\"Login\" />\r\n        <FormWrapper>\r\n          <LoginFormComponent {...formik} serverError={serverError} />\r\n        </FormWrapper>\r\n      </CardWrapperComponent>\r\n    </BlogLayoutComponent>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import * as Yup from 'yup';\r\n\r\nexport const validationSchema = Yup.object().shape({\r\n  subject: Yup.string()\r\n    .required('Subject is required!')\r\n    .min(3)\r\n    .max(50),\r\n  body: Yup.string().required('Body of post is required!'),\r\n  tags: Yup.string().required('Tags are required!'),\r\n});\r\nexport const initialValues = {\r\n  subject: '',\r\n  body: '',\r\n  tags: '',\r\n  thumbnail: null,\r\n};\r\n","import React from 'react';\r\nimport uuid from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport CKEditor from '@ckeditor/ckeditor5-react';\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\r\nimport { ErrorMessage, InputGroup, InputLabel } from './macro.styles';\r\n\r\nconst CkEditorComponent = ({\r\n  touched,\r\n  name,\r\n  label,\r\n  onChange,\r\n  value,\r\n  error,\r\n  errorMessage,\r\n  onBlur,\r\n  ...rest\r\n}) => {\r\n  const id = uuid();\r\n  return (\r\n    <InputGroup>\r\n      <InputLabel error={error} touched={touched} htmlFor={id}>\r\n        {label}\r\n      </InputLabel>\r\n      <CKEditor\r\n        {...rest}\r\n        editor={ClassicEditor}\r\n        data={value}\r\n        onChange={(event, editor) => {\r\n          const data = editor.getData();\r\n          onChange(data);\r\n        }}\r\n        onBlur={(event, editor) => {\r\n          const data = editor.getData();\r\n          onBlur(data);\r\n        }}\r\n      />\r\n      {error && touched && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n    </InputGroup>\r\n  );\r\n};\r\n\r\nCkEditorComponent.defaultProps = {\r\n  error: false,\r\n  errorMessage: '',\r\n  onBlur: () => {},\r\n  touched: false,\r\n};\r\n\r\nCkEditorComponent.propTypes = {\r\n  touched: PropTypes.bool,\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  error: PropTypes.bool,\r\n  errorMessage: PropTypes.string,\r\n  onBlur: PropTypes.func,\r\n};\r\n\r\nexport { CkEditorComponent };\r\n","import React, { useEffect, useState } from 'react';\r\nimport { IoMdCog, MdEmail } from 'react-icons/all';\r\nimport PropTypes from 'prop-types';\r\nimport { InputText } from '../MacroControllers/input-text.component';\r\nimport { FileInput } from '../MacroControllers/file-input.component';\r\nimport { CkEditorComponent } from '../MacroControllers/ckeditor';\r\nimport uuid from 'uuid/v1';\r\nconst CreatePostFieldsComponent = ({\r\n  errors,\r\n  touched,\r\n  values,\r\n  handleChange,\r\n  handleBlur,\r\n  setFieldValue,\r\n  setTouched,\r\n}) => {\r\n  const [key, setKey] = useState(uuid());\r\n  const [previousBody, setPreviousBody] = useState(null);\r\n  useEffect(() => {\r\n    if (previousBody === null || previousBody === '') {\r\n      setKey(uuid());\r\n    }\r\n    setPreviousBody(values.body);\r\n  }, [values.body]);\r\n  return (\r\n    <>\r\n      <InputText\r\n        PrefixIcon={MdEmail}\r\n        errorMessage={errors.subject}\r\n        error={Boolean(errors.subject)}\r\n        touched={touched.subject}\r\n        label=\"Subject\"\r\n        value={values.subject}\r\n        name=\"subject\"\r\n        resetField={() => setFieldValue('subject', '')}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n      />\r\n      <InputText\r\n        PrefixIcon={IoMdCog}\r\n        errorMessage={errors.tags}\r\n        error={Boolean(errors.tags)}\r\n        touched={touched.tags}\r\n        label=\"Tags\"\r\n        value={values.tags}\r\n        name=\"tags\"\r\n        resetField={() => setFieldValue('tags', '')}\r\n        placeholder={'sport, music, dance'}\r\n        onChange={handleChange}\r\n        onBlur={handleBlur}\r\n      />\r\n      <CkEditorComponent\r\n        PrefixIcon={MdEmail}\r\n        key={key}\r\n        errorMessage={errors.body}\r\n        error={Boolean(errors.body)}\r\n        touched={touched.body}\r\n        label=\"Body\"\r\n        value={values.body}\r\n        name=\"body\"\r\n        onChange={(data) => {\r\n          setFieldValue('body', data);\r\n        }}\r\n        onBlur={(data) => {\r\n          setFieldValue('body', data);\r\n          setTouched({ ...touched, body: true });\r\n        }}\r\n      />\r\n      <FileInput\r\n        label={'Thumbnail'}\r\n        onChange={(file) => setFieldValue('thumbnail', file)}\r\n        value={values.avatar}\r\n      />\r\n    </>\r\n  );\r\n};\r\nCreatePostFieldsComponent.defaultProps = {\r\n  errors: {},\r\n  touched: {},\r\n};\r\nCreatePostFieldsComponent.propTypes = {\r\n  errors: PropTypes.object,\r\n  values: PropTypes.object.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  setFieldValue: PropTypes.func.isRequired,\r\n  handleBlur: PropTypes.func.isRequired,\r\n  touched: PropTypes.object,\r\n};\r\nexport default CreatePostFieldsComponent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { WrapperSubmitButton } from '../../global.styles';\r\nimport { Button } from '../MacroControllers/button.component';\r\nimport CreatePostFieldsComponent from './create-post-fields.component';\r\nimport { MDBAlert } from 'mdbreact';\r\n\r\nconst CreatePostFormComponent = ({\r\n  errors,\r\n  values,\r\n  handleChange,\r\n  setFieldValue,\r\n  handleBlur,\r\n  touched,\r\n  isSubmitting,\r\n  isValid,\r\n  handleSubmit,\r\n  setTouched,\r\n  serverError,\r\n  editMode,\r\n}) => {\r\n  const [error, setError] = useState(serverError);\r\n  useEffect(() => {\r\n    setError(serverError);\r\n  }, [serverError]);\r\n  return (\r\n    <>\r\n      {error && (\r\n        <MDBAlert\r\n          color=\"danger\"\r\n          dismiss\r\n          onClose={() => {\r\n            setError('');\r\n          }}\r\n        >\r\n          {error}\r\n        </MDBAlert>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <CreatePostFieldsComponent\r\n          errors={errors}\r\n          values={values}\r\n          handleChange={handleChange}\r\n          setFieldValue={setFieldValue}\r\n          handleBlur={handleBlur}\r\n          touched={touched}\r\n          setTouched={setTouched}\r\n        />\r\n        <WrapperSubmitButton>\r\n          <Button\r\n            backgroundColor={isValid ? 'success' : 'danger'}\r\n            disabled={!isValid || isSubmitting}\r\n          >\r\n            {editMode ? 'Edit Post' : 'Create Post'}\r\n          </Button>\r\n        </WrapperSubmitButton>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\nCreatePostFormComponent.propTypes = {\r\n  errors: PropTypes.object.isRequired,\r\n  values: PropTypes.object.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n  setFieldValue: PropTypes.func.isRequired,\r\n  handleBlur: PropTypes.func.isRequired,\r\n  touched: PropTypes.object.isRequired,\r\n  isSubmitting: PropTypes.bool.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  isValid: PropTypes.bool.isRequired,\r\n  serverError: PropTypes.string.isRequired,\r\n};\r\nexport default CreatePostFormComponent;\r\n","import React, { useState } from 'react';\r\nimport { BlogLayoutComponent } from '../../../Components/BlogLayout/blog-layout.component';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useFormik } from 'formik';\r\nimport CardWrapperComponent from '../../../Components/CardWrapper/card-wrapper.component';\r\nimport CardWrapperHeaderComponent from '../../../Components/CardWrapperHeader/card-wrapper-header.component';\r\nimport { FormWrapper } from '../../../Components/MacroControllers/form-wrapper.component';\r\nimport { initialValues, validationSchema } from '../post.config';\r\nimport CreatePostFormComponent from '../../../Components/CreatePostForm/create-post-form.component';\r\nimport { createPost } from '../../../api/blog';\r\nimport { updateUserData } from '../../../Store/Auth/auth.actions';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { fetchPosts } from '../../../Store/Post/post.actions';\r\nimport {\r\n  addLoader,\r\n  removeLoader,\r\n} from '../../../Store/Controls/controls.actions';\r\nconst CreatePostPage = () => {\r\n  const [serverError, setServerError] = useState('');\r\n  const dispatch = useDispatch();\r\n  const toastManager = useToasts();\r\n  const { user } = useSelector((store) => store.auth);\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    onSubmit: async (values, { setSubmitting }) => {\r\n      setSubmitting(true);\r\n      dispatch(addLoader('CREATE_POST'));\r\n      const { hasError, errorMessage, data } = await createPost({\r\n        token: user.accessToken,\r\n        subject: values.subject,\r\n        body: values.body,\r\n        tags: values.tags,\r\n        thumbnail: values.thumbnail,\r\n      });\r\n      dispatch(removeLoader('CREATE_POST'));\r\n\r\n      setSubmitting(false);\r\n\r\n      if (hasError) {\r\n        toastManager.addToast(errorMessage, { appearance: 'error' });\r\n        setServerError(data?.errors?.[0] || '');\r\n        console.log('CreatePostPage -> data', data);\r\n      } else {\r\n        toastManager.addToast('Post created successfully', {\r\n          appearance: 'success',\r\n        });\r\n        dispatch(updateUserData());\r\n        dispatch(fetchPosts());\r\n      }\r\n    },\r\n  });\r\n  return (\r\n    <BlogLayoutComponent>\r\n      <CardWrapperComponent>\r\n        <CardWrapperHeaderComponent title=\"Create a Post\" />\r\n        <FormWrapper>\r\n          <CreatePostFormComponent {...formik} serverError={serverError} />\r\n        </FormWrapper>\r\n      </CardWrapperComponent>\r\n    </BlogLayoutComponent>\r\n  );\r\n};\r\nexport default CreatePostPage;\r\n","import React from 'react';\r\nimport { MDBBtn, MDBCol, MDBDataTable, MDBRow } from 'mdbreact';\r\nimport PropTypes from 'prop-types';\r\nimport { deletePost } from '../../api/blog';\r\nimport { updateUserData } from '../../Store/Auth/auth.actions';\r\nimport { fetchPosts } from '../../Store/Post/post.actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { addLoader, removeLoader } from '../../Store/Controls/controls.actions';\r\nconst ManagePostList = ({ user }) => {\r\n  const dispatch = useDispatch();\r\n  const { addToast } = useToasts();\r\n  const history = useHistory();\r\n  const data = {\r\n    columns: [\r\n      {\r\n        label: 'Post Title',\r\n        field: 'postTitle',\r\n        sort: 'asc',\r\n        width: 150,\r\n      },\r\n      {\r\n        label: 'Created At',\r\n        field: 'created_at',\r\n        sort: 'asc',\r\n        width: 150,\r\n      },\r\n      {\r\n        label: 'Options',\r\n        field: 'options',\r\n        sort: 'asc',\r\n        width: 500,\r\n      },\r\n    ],\r\n    rows: user.posts.map((post) => ({\r\n      postTitle: post.subject,\r\n      created_at: new Date(post.created_at).toDateString(),\r\n      options: [\r\n        <MDBBtn\r\n          onClick={async () => {\r\n            dispatch(addLoader('DELETE_POST'));\r\n            const { errorMessage, hasError } = await deletePost({\r\n              token: user.accessToken,\r\n              postId: post._id,\r\n            });\r\n            dispatch(removeLoader('DELETE_POST'));\r\n\r\n            if (hasError) {\r\n              addToast(errorMessage, { appearance: 'error' });\r\n              return;\r\n            }\r\n            addToast('Post deleted successfully.', { appearance: 'success' });\r\n\r\n            dispatch(updateUserData());\r\n            dispatch(fetchPosts());\r\n          }}\r\n          color={'danger'}\r\n        >\r\n          Delete\r\n        </MDBBtn>,\r\n        <MDBBtn\r\n          onClick={async () => {\r\n            history.push('/posts/edit/' + post._id);\r\n          }}\r\n          color={'warning'}\r\n        >\r\n          Edit\r\n        </MDBBtn>,\r\n      ],\r\n    })),\r\n  };\r\n  return (\r\n    <MDBRow>\r\n      <MDBCol>\r\n        <MDBDataTable striped bordered hover data={data} />\r\n      </MDBCol>\r\n    </MDBRow>\r\n  );\r\n};\r\nManagePostList.propTypes = {\r\n  user: PropTypes.object.isRequired,\r\n};\r\nexport default ManagePostList;\r\n","import React from 'react';\r\nimport { BlogLayoutComponent } from '../../../Components/BlogLayout/blog-layout.component';\r\nimport CardWrapperComponent from '../../../Components/CardWrapper/card-wrapper.component';\r\nimport CardWrapperHeaderComponent from '../../../Components/CardWrapperHeader/card-wrapper-header.component';\r\nimport { useSelector } from 'react-redux';\r\nimport ManagePostList from '../../../Components/ManagePostsLists/manage-post-list.component';\r\nconst ManagePostPage = () => {\r\n  const { user } = useSelector((store) => store.auth);\r\n\r\n  return (\r\n    <BlogLayoutComponent>\r\n      <CardWrapperComponent>\r\n        <CardWrapperHeaderComponent title={'Manage Posts'} />\r\n        <ManagePostList user={user} />\r\n      </CardWrapperComponent>\r\n    </BlogLayoutComponent>\r\n  );\r\n};\r\nexport default ManagePostPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { BlogLayoutComponent } from '../../../Components/BlogLayout/blog-layout.component';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useFormik } from 'formik';\r\nimport CardWrapperComponent from '../../../Components/CardWrapper/card-wrapper.component';\r\nimport CardWrapperHeaderComponent from '../../../Components/CardWrapperHeader/card-wrapper-header.component';\r\nimport { FormWrapper } from '../../../Components/MacroControllers/form-wrapper.component';\r\nimport {\r\n  initialValues as initialValuesImported,\r\n  validationSchema,\r\n} from '../post.config';\r\nimport CreatePostFormComponent from '../../../Components/CreatePostForm/create-post-form.component';\r\nimport { createPost, editPost } from '../../../api/blog';\r\nimport { updateUserData } from '../../../Store/Auth/auth.actions';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport { fetchPosts } from '../../../Store/Post/post.actions';\r\nimport {\r\n  addLoader,\r\n  removeLoader,\r\n} from '../../../Store/Controls/controls.actions';\r\nconst EditPostPage = ({\r\n  history: { push },\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) => {\r\n  const [serverError, setServerError] = useState('');\r\n  const [initialValues, setInitialValues] = useState(initialValuesImported);\r\n  const dispatch = useDispatch();\r\n  const toastManager = useToasts();\r\n\r\n  const { user } = useSelector((store) => store.auth);\r\n  useEffect(() => {\r\n    const post = user.posts.find((post) => post._id === id);\r\n    if (!post) {\r\n      toastManager.addToast('You cannot change this post.', {\r\n        appearance: 'error',\r\n      });\r\n      toastManager.addToast('Being redirected...', { appearance: 'info' });\r\n      push('/');\r\n    } else {\r\n      setInitialValues({\r\n        subject: post.subject,\r\n        body: post.body,\r\n        tags: post.tags\r\n          .reduce((acc, curr) => acc.concat(curr.name), [])\r\n          .join(', '),\r\n        thumbnail: null,\r\n      });\r\n    }\r\n  }, []);\r\n  const formik = useFormik({\r\n    initialValues,\r\n    validationSchema,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values, { setSubmitting }) => {\r\n      setSubmitting(true);\r\n      dispatch(addLoader('EDIT_POST'));\r\n      const { hasError, errorMessage, data } = await editPost(\r\n        user.accessToken,\r\n        id,\r\n        {\r\n          subject: values.subject,\r\n          body: values.body,\r\n          tags: values.tags,\r\n          thumbnail: values.thumbnail,\r\n        },\r\n      );\r\n      dispatch(removeLoader('EDIT_POST'));\r\n\r\n      setSubmitting(false);\r\n\r\n      if (hasError) {\r\n        toastManager.addToast(errorMessage, { appearance: 'error' });\r\n        setServerError(errorMessage);\r\n        console.log('[Edit Post] data', data);\r\n      } else {\r\n        toastManager.addToast('Post updated successfully', {\r\n          appearance: 'success',\r\n        });\r\n        dispatch(updateUserData());\r\n        dispatch(fetchPosts());\r\n      }\r\n    },\r\n  });\r\n  return (\r\n    <BlogLayoutComponent>\r\n      <CardWrapperComponent>\r\n        <CardWrapperHeaderComponent title=\"Edit Post\" />\r\n        <FormWrapper>\r\n          <CreatePostFormComponent\r\n            {...formik}\r\n            editMode\r\n            serverError={serverError}\r\n          />\r\n        </FormWrapper>\r\n      </CardWrapperComponent>\r\n    </BlogLayoutComponent>\r\n  );\r\n};\r\nexport default EditPostPage;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { BlogLayoutComponent } from '../../../Components/BlogLayout/blog-layout.component';\r\nimport CardWrapperComponent from '../../../Components/CardWrapper/card-wrapper.component';\r\nimport CardWrapperHeaderComponent from '../../../Components/CardWrapperHeader/card-wrapper-header.component';\r\nimport {\r\n  MDBRow,\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBMask,\r\n  MDBIcon,\r\n  MDBView,\r\n  MDBBtn,\r\n} from 'mdbreact';\r\nimport { getDaysSince } from '../../../helpers/helpers';\r\nimport styled from 'styled-components';\r\n\r\nexport const PostViewPage = ({\r\n  match: {\r\n    params: { id },\r\n  },\r\n}) => {\r\n  const posts = useSelector((state) => state.post.posts);\r\n  const post = posts.find((post) => post._id === id);\r\n\r\n  return (\r\n    <BlogLayoutComponent>\r\n      <CardWrapperComponent>\r\n        <CardWrapperHeaderComponent title={''} />\r\n        <MDBContainer>\r\n          <MDBRow>\r\n            <MDBCol lg=\"5\">\r\n              <MDBView className=\"rounded z-depth-2 mb-lg-0 mb-4\" hover waves>\r\n                <img\r\n                  className=\"img-fluid\"\r\n                  src={\r\n                    post.postImage\r\n                      ? `${\r\n                          process.env.NODE_ENV === 'development'\r\n                            ? `http://localhost:4000/`\r\n                            : '/'\r\n                        }${post.postImage.replace(/\\\\/g, '/')}`\r\n                      : 'https://mdbootstrap.com/img/Photos/Others/img%20(27).jpg'\r\n                  }\r\n                  alt=\"\"\r\n                />\r\n                <a href=\"#!\">\r\n                  <MDBMask overlay=\"white-slight\" />\r\n                </a>\r\n              </MDBView>\r\n            </MDBCol>\r\n            <MDBCol lg=\"7\">\r\n              <Flex>\r\n                <p>\r\n                  {post.tags.map((tag, index) => {\r\n                    return (\r\n                      <a href=\"#!\" className=\"green-text d-inline\">\r\n                        <h6 className=\"font-weight-bold mb-3 d-inline\">\r\n                          {tag.name.replace(/\"/g, '')}\r\n                          {index + 1 !== post.tags.length && ', '}\r\n                        </h6>\r\n                      </a>\r\n                    );\r\n                  })}\r\n                </p>\r\n                <h2 className=\"font-weight-bold mb-3 p-0\">\r\n                  <strong>{post.subject}</strong>\r\n                </h2>\r\n                <p>\r\n                  by\r\n                  <a href=\"#!\">\r\n                    <strong> {post.author.name}</strong>\r\n                  </a>\r\n                  , {`${getDaysSince(post.created_at)}`} days\r\n                </p>\r\n              </Flex>\r\n            </MDBCol>\r\n          </MDBRow>\r\n          <hr className=\"my-5\" />\r\n          <div dangerouslySetInnerHTML={{ __html: post.body }}></div>\r\n        </MDBContainer>\r\n      </CardWrapperComponent>\r\n    </BlogLayoutComponent>\r\n  );\r\n};\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 100%;\r\n  width: 100%;\r\n  flex-direction: column;\r\n`;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { HomePage } from '../Pages/home/home.page';\r\nimport RegisterPage from '../Pages/register/register.page';\r\nimport LoginPage from '../Pages/login/login.page';\r\nimport CreatePostPage from '../Pages/PostPages/create-post/create-post.page';\r\nimport ManagePostPage from '../Pages/PostPages/manage-posts/manage-posts.page';\r\nimport EditPostPage from '../Pages/PostPages/edit-post/edit-post.page';\r\nimport { PostViewPage } from '../Pages/PostPages/PostView/postview.page';\r\n\r\nconst OnlyNotLoginRoute = ({ Component, ...rest }) => {\r\n  const auth = useSelector((state) => state.auth);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        !auth.userLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\nconst OnlyLoginRoute = ({ Component, ...rest }) => {\r\n  const auth = useSelector((state) => state.auth);\r\n  if (!auth.userLoggedIn) {\r\n    return <Route {...rest} render={(props) => <Redirect to=\"/\" />} />;\r\n  }\r\n  return <Route {...rest} render={(props) => <Component {...props} />} />;\r\n};\r\nconst NormalRoutes = () => (\r\n  <>\r\n    <Route path=\"/\" exact component={HomePage} />\r\n    <OnlyNotLoginRoute path=\"/register\" Component={RegisterPage} />\r\n    <OnlyLoginRoute path=\"/manage\" Component={RegisterPage} />\r\n    <OnlyLoginRoute path=\"/posts/edit/:id\" Component={EditPostPage} />\r\n    <OnlyLoginRoute path=\"/posts/create\" exact Component={CreatePostPage} />\r\n    <OnlyLoginRoute path=\"/posts/manage\" Component={ManagePostPage} />\r\n    <Route path=\"/posts/show/:id\" exact component={PostViewPage} />\r\n    <OnlyNotLoginRoute path=\"/login\" Component={LoginPage} />\r\n  </>\r\n);\r\nexport default NormalRoutes;\r\n","import React from 'react';\r\nimport { MDBListGroup, MDBListGroupItem, MDBIcon } from 'mdbreact';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst SideNavigation = () => (\r\n  <>\r\n    <div className=\"sidebar-fixed position-fixed\">\r\n      <a href=\"#!\" className=\"logo-wrapper waves-effect\">\r\n        <img alt=\"MDB React Logo\" className=\"img-fluid\" />\r\n      </a>\r\n      <MDBListGroup className=\"list-group-flush\">\r\n        <NavLink exact to=\"/\" activeClassName=\"activeClass\">\r\n          <MDBListGroupItem>\r\n            <MDBIcon icon=\"chart-pie\" className=\"mr-3\" />\r\n            Dashboard\r\n          </MDBListGroupItem>\r\n        </NavLink>\r\n        <NavLink to=\"/profile\" activeClassName=\"activeClass\">\r\n          <MDBListGroupItem>\r\n            <MDBIcon icon=\"user\" className=\"mr-3\" />\r\n            Profile\r\n          </MDBListGroupItem>\r\n        </NavLink>\r\n        <NavLink to=\"/tables\" activeClassName=\"activeClass\">\r\n          <MDBListGroupItem>\r\n            <MDBIcon icon=\"table\" className=\"mr-3\" />\r\n            Tables\r\n          </MDBListGroupItem>\r\n        </NavLink>\r\n        <NavLink to=\"/maps\" activeClassName=\"activeClass\">\r\n          <MDBListGroupItem>\r\n            <MDBIcon icon=\"map\" className=\"mr-3\" />\r\n            Maps\r\n          </MDBListGroupItem>\r\n        </NavLink>\r\n        <NavLink to=\"/404\" activeClassName=\"activeClass\">\r\n          <MDBListGroupItem>\r\n            <MDBIcon icon=\"exclamation\" className=\"mr-3\" />\r\n            404\r\n          </MDBListGroupItem>\r\n        </NavLink>\r\n      </MDBListGroup>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default SideNavigation;\r\n","import React from 'react';\r\nimport { MDBFooter, MDBBtn, MDBIcon } from 'mdbreact';\r\n\r\nconst Footer = () => <></>;\r\n\r\nexport default Footer;\r\n{\r\n  /* <MDBFooter color=\"blue\" className=\"text-center font-small darken-2\">\r\n    <div className=\"pt-4\">\r\n      <MDBBtn\r\n        outline\r\n        color=\"white\"\r\n        tag=\"a\"\r\n        href=\"https://mdbootstrap.com/docs/react/getting-started/download/\"\r\n        target=\"_blank\"\r\n      >\r\n        Download MDB\r\n        <MDBIcon icon=\"download\" className=\"ml-2\" />\r\n      </MDBBtn>\r\n      <MDBBtn\r\n        outline\r\n        color=\"white\"\r\n        tag=\"a\"\r\n        href=\"https://mdbootstrap.com/docs/react/getting-started/quick-start/\"\r\n        target=\"_blank\"\r\n      >\r\n        Start free tutorial\r\n        <MDBIcon icon=\"graduation-cap\" className=\"ml-2\" />\r\n      </MDBBtn>\r\n      <hr className=\"my4\" />\r\n    </div>\r\n    <div className=\"pb-4\">\r\n      <MDBIcon fab icon=\"facebook\" className=\"mr-3\" />\r\n      <MDBIcon fab icon=\"twitter\" className=\"mr-3\" />\r\n      <MDBIcon fab icon=\"youtube\" className=\"mr-3\" />\r\n      <MDBIcon fab icon=\"google-plus\" className=\"mr-3\" />\r\n      <MDBIcon fab icon=\"dribbble\" className=\"mr-3\" />\r\n      <MDBIcon fab icon=\"pinterest\" className=\"mr-3\" />\r\n      <MDBIcon fab icon=\"github\" className=\"mr-3\" />\r\n      <MDBIcon fab icon=\"codepen\" className=\"mr-3\" />\r\n    </div>\r\n    <p className=\"footer-copyright mb-0 py-3 text-center\">\r\n      &copy; {new Date().getFullYear()} Copyright:\r\n      <a href=\"https://www.MDBootstrap.com\"> MDBootstrap.com </a>\r\n    </p>\r\n  </MDBFooter> */\r\n}\r\n","import React from 'react';\r\nimport SideNavigation from './sideNavigation';\r\nimport Footer from './Footer';\r\n\r\nconst AdminLayout = ({ children }) => (\r\n  <>\r\n    <div className=\"flexible-content\">\r\n      <SideNavigation />\r\n      <main id=\"content\" className=\"p-5\">\r\n        {children}\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default AdminLayout;\r\n","import React from 'react';\r\n\r\nimport AdminLayout from '../AdminLayout';\r\n\r\nconst DashboardPage = () => <AdminLayout>teste</AdminLayout>;\r\n\r\nexport default DashboardPage;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport DashboardPage from '../Admin/pages/DashboardPage';\r\nconst AdminRoute = ({ Component, ...rest }) => {\r\n  const auth = useSelector((state) => state.auth);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        auth.userLoggedIn && auth.user.isAdmin ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\nconst AdminRoutes = () => {\r\n  return (\r\n    <>\r\n      <AdminRoute path=\"/admin/dashboard\" Component={DashboardPage} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminRoutes;\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\nimport NormalRoutes from './routes/normal.routes';\r\nimport AdminRoutes from './routes/admin.routes';\r\n\r\nconst Routes = () => (\r\n  <>\r\n    <NormalRoutes />\r\n    <AdminRoutes />\r\n  </>\r\n);\r\nexport const RouterConfig = () => (\r\n  <>\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Routes />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  </>\r\n);\r\n","import { ThemeProvider } from 'styled-components';\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst theme = {\r\n  success: '#379951',\r\n  danger: '#91313F',\r\n  dark: '#1D262B',\r\n  purple: '#483B56',\r\n  blue: '#5F54FF',\r\n  orange: '#FF8552',\r\n};\r\nexport const StyledTheme = ({ children }) => (\r\n  <>\r\n    <ThemeProvider theme={theme}>{children}</ThemeProvider>\r\n  </>\r\n);\r\nStyledTheme.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ReduxStore } from './create-store.config';\r\nimport { RouterConfig } from './create-router.config';\r\nimport 'normalize.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './main.css';\r\nimport { StyledTheme } from './create-theme.style';\r\nimport { ToastProvider } from 'react-toast-notifications';\r\n\r\nconst App = () => (\r\n  <StyledTheme>\r\n    <ReduxStore>\r\n      <ToastProvider autoDismiss autoDismissTimeout={6000}>\r\n        <RouterConfig />\r\n      </ToastProvider>\r\n    </ReduxStore>\r\n  </StyledTheme>\r\n);\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}